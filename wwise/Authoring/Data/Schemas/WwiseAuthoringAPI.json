{
    "version": 1,
    "definitions": {
        "guid": {
            "type": "string",
            "pattern": "^\\{[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\\}$"
        },
        "soundEngineObjectArg": {
            "anyOf": [
                { "$ref": "#/definitions/uniqueName" },
                { "$ref": "#/definitions/guid" },
                { "$ref": "#/definitions/uint32" }
            ]
        },
        "uniqueName": {
            "type": "string",
            "pattern": "^[a-zA-Z_]+[a-zA-Z_0-9]*$"
        },
        "propertyName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9 _]+$"
        },
        "objectPathArg": {
            "type": "string",
            "pattern": "^\\\\"
        },
        "objectArg":  {
            "anyOf": [
                {
                    "$ref": "#/definitions/guid"
                },
                {
                    "$ref": "#/definitions/objectPathArg"
                }
            ]
        },
        "platformArg": {
            "$ref": "#/definitions/guid"
        },
        "shortId": {
            "type": "object",
            "properties": {
                "shortId": {
                    "$ref": "#/definitions/uint32",
                    "description": "The short ID of the object."
                },
                "type": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 71,
                    "description": "The type of the short ID. Use values from WObjectType."
                }
            },
            "required": [ "shortId", "type" ],
            "additionalProperties": false
        },
        "objectReturn": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/guid",
                    "description": "The ID (GUID) of the object."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the object."
                },
                "notes": {
                    "type": "string",
                    "description": "The notes of the object."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the object. Refer to \\ref wobjects_index for more information on the types available."
                },
                "path": {
                    "type": "string",
                    "description": "The path of the object from the project root. Ex: '\\Actor-Mixer Hierarchy\\Default Work Unit\\Sound1'"
                },
                "parent": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/guid",
                            "description": "The ID (GUID) of the object."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the object."
                        }
                    },
                    "description": "The parent of the object in the hierarchy."
                },
                "owner": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/guid",
                            "description": "The ID (GUID) of the object."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the object."
                        }
                    },
                    "description": "The owner of the object. This applies to objects being locally owned by other objects, such as custom effects, custom attenuations, etc."
                },
                "isPlayable": {
                    "type": "boolean",
                    "description": "True if the object can be played in Transport."
                },
                "shortId": {
                    "type": "integer",
                    "description": "The short ID of the object."
                },
                "classId": {
                    "$ref": "#/definitions/uint32",
                    "description": "The class ID of the object."
                },
                "category": {
                    "type": "string",
                    "description": "The category of the object. Ex: 'Actor-Mixer Hierarchy'"
                },
                "filePath": {
                    "type": "string",
                    "description": "The path to the file containing the object. The path can be a work-unit file, or a project file."
                },
                "workunit": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/guid",
                            "description": "The ID (GUID) of the object."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the object."
                        }
                    },
                    "description": "The parent workunit containing the object. The 'id' and the 'name' will be returned."
                },
                "childrenCount": {
                    "type": "number",
                    "description": "The number of children for the object."
                },
                "music:transitionRoot": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/guid",
                            "description": "The ID (GUID) of the object."
                        }
                    },
                    "description": "The music transition root containing all other music transitions recursively."
                },
                "music:playlistRoot": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/guid",
                            "description": "The ID (GUID) of the object."
                        }
                    },
                    "description": "The music playlist root containing all other music playlist items recursively. This applies to Music Playlist Containers only."
                },
                "sound:originalWavFilePath": {
                    "type": "string",
                    "description": "Absolute path to the original wav file. Only valid for Sound and Audio Source objects."
                },
                "sound:convertedWemFilePath": {
                    "type": "string",
                    "description": "Absolute path to the converted wem file. Specify the platform in the options. Only valid for Sound and Audio Source objects."
                },
                "soundbank:bnkFilePath": {
                    "type": "string",
                    "description": "Absolute path to the generated SoundBank file associated with the SoundBank object. Only valid for SoundBank objects."
                },
                "audioSource:playbackDuration": {
                    "type": "object",
                    "properties": {
                        "playbackDurationMin":{
                            "type": "number",
                            "description": "The minimum possible time playback can take"
                        },
                        "playbackDurationMax":{
                            "type": "number",
                            "description": "The maximum possible time playback can take"
                        },
                        "playbackDurationType":{
                            "type": "string",
                            "description": "The type of duration."
                        }
                    },
                    "description": "The duration root that contains the min and max durations and duration type"
                },
                "audioSource:maxDurationSource": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/guid",
                      "description": "The ID (GUID) of the audio source object with longest duration."
                    },
                    "trimmedDuration": {
                      "type": "number",
                      "description": "The duration in seconds of the longest trimmed source."
                    }
                  } 
                },
                "audioSource:trimValues": {
                    "type": "object",
                    "properties": {
                        "trimBegin": {
                            "type": "number",
                            "description": "The time value in seconds of the start trim"
                        },
                        "trimEnd": {
                            "type": "number",
                            "description": "The time value in seconds of the end trim"
                        }
                    }
                },
                "workunit:isDefault": {
                    "type": "boolean",
                    "description": "True if the work unit is the default."
                },
                "workunit:type": {
                    "type": "string",
                    "description": "The type of the Work Unit. Please note that, like Work Units, physical folders have the type \"WorkUnit\". Physical folders will have the workunit:type \"folder\".",
                    "enum": [
                        "folder",
                        "rootFile",
                        "nestedFile"
                    ]
                },
                "workunit:isDirty": {
                    "type": "boolean",
                    "description": "True if a Work Unit or a Project (wproj file) is dirty, meaning it is modified but not saved."
                },
                "switchContainerChild:context": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/guid",
                            "description": "The ID (GUID) of the object."
                        }
                    },
                    "description": "The context object associated with the child of a Switch Container. This object holds the properties associated with the child that are context-dependent for the Switch Container (for example: property for the 1st only checkbox)."
                }
            },
            "patternProperties": {
                "^@@?[_a-zA-Z][_a-zA-Z0-9]*$": {
                    "description": "Specifies the property or reference value. A single @ specifies the value of the property for the associated object. A double @@ specifies the value of the property using the source of override. Refer to \\ref wobjects_index for more information on the properties and references for all types available.",
                    "anyOf": [
                        { "type": "string" },
                        { "type": "number" },
                        { "type": "boolean" },
                        {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/guid",
                                    "description": "The ID (GUID) of the object."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The name of the object."
                                }
                            }
                        }
                    ]
                }
            },
            "additionalProperties": false
        },
        "returnExpression": {
            "type": "array",
            "items": {
                "anyOf": [
                    {
                        "type": "string",
                        "description": "Specifies one or many of the built-in accessors for Wwise objects.",
                        "enum": [
                            "id",
                            "name",
                            "notes",
                            "type",
                            "shortId",
                            "classId",
                            "category",
                            "filePath",
                            "workunit",
                            "parent",
                            "owner",
                            "path",
                            "isPlayable",
                            "childrenCount",
                            "sound:convertedWemFilePath",
                            "sound:originalWavFilePath",
                            "soundbank:bnkFilePath",
                            "music:transitionRoot",
                            "music:playlistRoot",
                            "audioSource:playbackDuration",
                            "audioSource:maxDurationSource",
                            "audioSource:trimValues",
                            "workunit:isDefault",
                            "workunit:type",
                            "workunit:isDirty",
                            "switchContainerChild:context"
                        ]
                    },
                    {
                        "type": "string",
                        "description": "Specifies one or many property names for Wwise objects. Specifying a single @ returns the value of the property for the associated object. Specifying a double @@ returns the value of the property for the source of override. Refer to \\ref wobjects_index.",
                        "pattern": "^@@?[_a-zA-Z][_a-zA-Z0-9]*$"
                    }
                ]
            }
        },
        "objectReturnOptions": {
            "type": "object",
            "properties": {
                "return": {
                    "$ref": "#/definitions/returnExpression",
                    "description": "Specifies what is being returned for every object. Refer to \\ref wobjects_index for more information on the properties and references available."
                },
                "platform": {
                    "$ref": "#/definitions/guid",
                    "description": "The ID (GUID) of the platform."
                }
            },
            "additionalProperties": false
        },
        "propertyValue": {
            "anyOf": [
                { "type": "null" },
                { "type": "string" },
                { "type": "number" },
                { "type": "boolean" }
            ]
        },
        "gameObject": {
            "type": "integer",
            "minimum": 0,
            "maximum": 18446744073709551615
        },
        "int32": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647
        },
        "uint32": {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
        },
        "uint64": {
            "type": "integer",
            "minimum": 0,
            "maximum": 18446744073709551615
        }
    },

    "functions": [
        {
            "id": "ak.wwise.core.getInfo",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Retrieve global Wwise information.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "apiVersion": {
                        "type": "number",
                        "minimum": 1,
                        "description": "Version of the Wwise Authoring API."
                    },
                    "displayName": {
                        "type": "string",
                        "pattern": "Wwise",
                        "description": "Display Name of Wwise."
                    },
                    "branch": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Branch built."
                    },
                    "copyright": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Copyright information."
                    },
                    "version": {
                        "type": "object",
                        "properties": {
                            "displayName": {
                                "type": "string",
                                "minLength": 1,
                                "description": "Wwise version name."
                            },
                            "year": {
                                "type": "integer",
                                "minimum": 2000,
                                "maximum": 2100,
                                "description": "Year of version."
                            },
                            "major": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100,
                                "description": "Major number of version."
                            },
                            "minor": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100,
                                "description": "Minor number of version."
                            },
                            "build": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "Build number."
                            },
                            "nickname": {
                                "type": "string",
                                "description": "Special name given to a version."
                            },
                            "schema": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "Schema version for the Wwise Project and Work Units."
                            }
                        }
                    },
                    "configuration": {
                        "type": "string",
                        "enum": [ "release", "debug" ],
                        "description": "Indicate a release or debug build."
                    },
                    "platform": {
                        "type": "string",
                        "enum": [ "x64", "win32" ],
                        "description": "Indicate the platform on which Wwise was built."
                    },
                    "isCommandLine": {
                        "type": "boolean",
                        "description": "Indicate if Wwise is running in command line."
                    },
                    "processId": {
                        "type": "integer",
                        "description": "The process identifier of Wwise."
                    },
                    "processPath": {
                        "type": "string",
                        "description": "The process path of Wwise."
                    },
                    "directories": {
                        "type": "object",
                        "properties": {
                            "install": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The root directory of Wwise. This is the installation directory."
                            },
                            "authoring": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The Wwise Authoring root directory"
                            },
                            "bin": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The bin directory, where Wwise.exe is located."
                            },
                            "log": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The log directory."
                            },
                            "help": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The help directory."
                            },
                            "user": {
                                "type": "string",
                                "minLength": 1,
                                "description": "The Wwise user data directory root."
                            }
                        },
                        "description": ""
                    }
                }
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": " Getting information about Wwise",
                    "description": "Gets information about the currently connected Wwise.",
                    "args": { },
                    "result": {
                        "displayName": "Wwise",
                        "platform": "x64",
                        "directories": {
                            "log": "C:\\Projects\\Wwise\\Authoring\\source\\App\\",
                            "help": "C: \\Projects\\Wwise\\Authoring\\Help\\",
                            "user": "%APPDATA%\\Audiokinetic\\Wwise\\",
                            "install": "C: \\Projects\\Wwise\\",
                            "authoring": "C:\\Projects\\Wwise\\Authoring\\",
                            "bin": "C: \\Projects\\Wwise\\Authoring\\source\\App\\"
                        },
                        "branch": "v2016.2\/wwise_main",
                        "configuration": "debug",
                        "version": {
                            "displayName": "v2017.1.0",
                            "nickname": "",
                            "build": 83,
                            "minor": 0,
                            "year": 2017,
                            "major": 1
                        },
                        "copyright": "\u00a9 2006-2017. Audiokinetic Inc. All rights reserved.",
                        "apiVersion": 1
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.ui.bringToForeground",
            "restrict": [ "userInterface" ],
            "description": "Bring Wwise main window to foreground. Refer to SetForegroundWindow and AllowSetForegroundWindow on MSDN for more information on the restrictions. Refer to ak.wwise.core.getInfo to obtain the Wwise process ID for AllowSetForegroundWindow.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Bringing the currently connected Wwise to foreground.",
                    "description": "Brings the currently connected Wwise to foreground.",
                    "args": { },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.soundengine.postEvent",
			"restrict": [ "userInterface" ],
            "description": "Asynchronously post an Event to the sound engine (by event ID). See <tt>AK::SoundEngine::PostEvent</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "event": {
                        "$ref": "#/definitions/soundEngineObjectArg",
                        "description": "Either the ID (GUID), name, or short ID of the Event."
                    },
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "The unique ID of the game object. "
                    }
                },
                "required": [ "event", "gameObject" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "return": {
                        "$ref": "#/definitions/uint32",
                        "description": "The playing ID of the Event launched, or \\c AK_INVALID_PLAYING_ID if posting the event failed."
                    }
                },
                "required": [ "return" ],
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Posting an Event by name",
                    "description": "Posts an Event to the sound engine using the Event's name.",
                    "args": {
                        "event": "Play_Music",
                        "gameObject": 1122334
                    },
                    "result": {
                        "return": 8
                    }
                },
                {
                    "title": "Posting an Event by short ID",
                    "description": "Posts an Event to the sound engine using the Event's short ID.",
                    "args": {
                        "event": 2932040671,
                        "gameObject": 1122334
                    },
                    "result": {
                        "return": 8
                    }
                },
                {
                    "title": "Posting an Event by object GUID",
                    "description": "Posts an Event to the sound engine using the Event's GUID.",
                    "args": {
                        "event": "{FF59687C-48CF-4385-B1C5-CE84B0A63880}",
                        "gameObject": 1122334
                    },
                    "result": {
                        "return": 8
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.executeActionOnEvent",
			"restrict": [ "userInterface" ],
            "description": "Execute an action on all nodes that are referenced in the specified event in an action of type play. See <tt>AK::SoundEngine::ExecuteActionOnEvent</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "event": {
                        "$ref": "#/definitions/soundEngineObjectArg",
                        "description": "Either the ID (GUID), name or short ID of the event."
                    },
                    "actionType": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4,
                        "description": "Action to execute on all the elements that were played using the specified event. Use values from <tt>AkActionOnEventType</tt>."
                    },
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Associated game object ID."
                    },
                    "transitionDuration": {
                        "$ref": "#/definitions/int32",
                        "description": "Fade duration (ms)."
                    },
                    "fadeCurve": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 9,
                        "description": "Use values from <tt>AkCurveInterpolation</tt>."
                    }
                },
                "required": [ "event", "actionType", "gameObject", "transitionDuration", "fadeCurve" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Launching a stop Action on Event",
                    "description": "Executes a Stop Action for the given Event, fading out with a 5 s log1 Curve.",
                    "args": {
                        "event": "{FF59687C-48CF-4385-B1C5-CE84B0A63880}",
                        "actionType": 0,
                        "gameObject": 1122334,
                        "transitionDuration": 5000,
                        "fadeCurve": 2
                    },
                    "result": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.registerGameObj",
			"restrict": [ "userInterface" ],
            "description": "Register a game object. Registering a game object twice does nothing. Unregistering it once unregisters it no matter how many times it has been registered. See <tt>AK::SoundEngine::RegisterGameObj</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "ID of the game object to be registered."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the game object (for monitoring purpose)."
                    }
                },
                "required": [ "gameObject", "name" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Registering a game object",
                    "description": "Registers the \"MyGameObjectName\" game object.",
                    "args": {
                        "gameObject": 1122334,
                        "name": "MyGameObjectName"
                    },
                    "result": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.stopPlayingID",
			"restrict": [ "userInterface" ],
            "description": "Stop the current content, associated to the specified playing ID, from playing. See <tt>AK::SoundEngine::StopPlayingID</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "playingId": {
                        "$ref": "#/definitions/uint32",
                        "description": "Playing ID to be stopped."
                    },
                    "transitionDuration": {
                        "$ref": "#/definitions/int32",
                        "description": "Fade duration (ms)."
                    },
                    "fadeCurve": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 9,
                        "description": "Curve type to be used for the transition. Use values from <tt>AkCurveInterpolation</tt>."
                    }
                },
                "required": [ "playingId", "transitionDuration", "fadeCurve" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Stopping a current content playing",
                    "description": "Stops the content, specified by \"playingId\", by using \"transitionDuration\" with a Linear Curve.",
                    "args": {
                        "playingId": 5566998,
                        "transitionDuration": 2000,
                        "fadeCurve": 4
                    },
                    "result": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.stopAll",
			"restrict": [ "userInterface" ],
            "description": "Stop playing the current content associated to the specified game object ID. If no game object is specified, all sounds will be stopped. See <tt>AK::SoundEngine::StopAll</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Specify a game object to stop only playback associated to the provided game object ID."
                    }
                },
                "required": [ "gameObject" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Stopping a currently playing content",
                    "description": "Stops playing all the content associated with \"gameObject\".",
                    "args": {
                        "gameObject": 1122334
                    },
                    "result": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.postMsgMonitor",
			"restrict": [ "userInterface" ],
            "description": "Display a message in the profiler.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "The message to display."
                    }
                },
                "required": [ "message" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Sending a message to the profiler",
                    "description": "Sends the \"message\" to the profiler.",
                    "args": {
                        "message": "This is a message."
                    },
                    "result": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.setObjectObstructionAndOcclusion",
			"restrict": [ "userInterface" ],
            "description": "Set a game object's obstruction and occlusion levels. This function is used to affect how an object should be heard by a specific listener. See <tt>AK::SoundEngine::SetObjectObstructionAndOcclusion</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "emitter": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Emitter game object ID."
                    },
                    "listener": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Listener game object ID"
                    },
                    "obstructionLevel": {
                        "type": "number",
                        "description": "ObstructionLevel: [0.0f..1.0f]."
                    },
                    "occlusionLevel": {
                        "type": "number",
                        "description": "OcclusionLevel: [0.0f..1.0f]."
                    }
                },
                "required": [ "emitter", "listener", "obstructionLevel", "occlusionLevel" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting the obstruction and occlusion level of a game object.",
                    "description": "Sets the \"emitter\"'s \"obstructionLevel\" and \"occlusionLevel\" for the \"listener\".",
                    "args": {
                        "emitter": 1122334,
                        "listener": 4455667,
                        "obstructionLevel": 0.3,
                        "occlusionLevel": 0.3
                    },
                    "result": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.setGameObjectOutputBusVolume",
			"restrict": [ "userInterface" ],
            "description": "Set the output bus volume (direct) to be used for the specified game object. See <tt>AK::SoundEngine::SetGameObjectOutputBusVolume</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "emitter": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Associated emitter game object ID."
                    },
                    "listener": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Associated listener game object ID."
                    },
                    "controlValue": {
                        "type": "number",
                        "description": "A multiplier where 0 means silence and 1 means no change. Therefore, values between 0 and 1 will attenuate the sound, and values greater than 1 will amplify it."
                    }
                },
                "required": [ "emitter", "listener", "controlValue" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting the \"emitter\"'s output bus volume for the \"listener\"",
                    "description": "Amplifies the output bus volume of \"emitter\" for \"listener\" by using the multiplier \"controlValue\".",
                    "args": {
                        "emitter": 1122334,
                        "listener": 4455667,
                        "controlValue": 2
                    },
                    "result": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.setGameObjectAuxSendValues",
			"restrict": [ "userInterface" ],
            "description": "Set the Auxiliary Busses to route the specified game object. See <tt>AK::SoundEngine::SetGameObjectAuxSendValues</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Associated game object ID."
                    },
                    "auxSendValues": {
                        "type": "array",
                        "items": {
                            "maxItems": 4,
                            "type": "object",
                            "properties": {
                                "listener": {
                                    "$ref": "#/definitions/gameObject",
                                    "description": "Game object ID of the listener associated with this send."
                                },
                                "auxBus": {
                                    "$ref": "#/definitions/soundEngineObjectArg",
                                    "description": "Either the ID (GUID), name or short ID of the auxiliary bus."
                                },
                                "controlValue": {
                                    "type": "number",
                                    "description": "Value in the range [0.0f:1.0f], send level to auxiliary bus."
                                }
                            },
                            "required": [ "listener", "auxBus", "controlValue" ],
                            "additionalProperties": false
                        },
                        "description": "Array of AkAuxSendValue structures."
                    }
                },
                "required": [ "gameObject", "auxSendValues" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting the Auxiliary Busses for a game object",
                    "description": "Sets the Auxiliary Busses of \"emitter\" for \"listener\"s specifying the bus name and value for each.",
                    "args": {
                        "gameObject": 1122334,
                        "auxSendValues": [
                            {
                                "listener": 5566123,
                                "auxBus": "AuxBus1",
                                "controlValue": 0.6
                            },
                            {
                                "listener": 226486,
                                "auxBus": "AuxBus2",
                                "controlValue": 0.4
                            }
                        ]
                    },
                    "result": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.postTrigger",
			"restrict": [ "userInterface" ],
            "description": "Post the specified Trigger. See <tt>AK::SoundEngine::PostTrigger</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "trigger": {
                        "$ref": "#/definitions/soundEngineObjectArg",
                        "description": "Either the ID (GUID), name, or short ID of the Trigger."
                    },
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Associated game object ID."
                    }
                },
                "required": [ "trigger", "gameObject" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Posting a Trigger by name",
                    "description": "Posts the specified \"trigger\" by name to be applied on \"gameObject\".",
                    "args": {
                        "trigger": "MyTrigger",
                        "gameObject": 1122334
                    },
                    "result": {
                    }
                },
                {
                    "title": "Posting a Trigger by GUID",
                    "description": "Posts the specified \"trigger\" by GUID to be applied on \"gameObject\".",
                    "args": {
                        "trigger": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "gameObject": 1122334
                    },
                    "result": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.setSwitch",
			"restrict": [ "userInterface" ],
            "description": "Set the State of a Switch Group. See <tt>AK::SoundEngine::SetSwitch</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "switchGroup": {
                        "$ref": "#/definitions/soundEngineObjectArg",
                        "description": "Either the ID (GUID), name, or short ID of the Switch Group."
                    },
                    "switchState": {
                        "$ref": "#/definitions/soundEngineObjectArg",
                        "description": "Either the ID (GUID), name, or short ID of the Switch State."
                    },
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Associated game object ID."
                    }
                },
                "required": [ "switchGroup", "switchState", "gameObject" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting the Switch Group to another State using names.",
                    "description": "Sets \"switchGroup\" to the \"switchState\" for \"gameObject\".",
                    "args": {
                        "switchGroup": "Ground",
                        "switchState": "Gravel",
                        "gameObject": 1122334
                    },
                    "return": {
                    }
                },
                {
                    "title": "Setting the Switch Group to another State using short IDs.",
                    "description": "Sets \"switchGroup\" to the \"switchState\" for \"gameObject\".",
                    "args": {
                        "switchGroup": 1270826848,
                        "switchState": 1208172755,
                        "gameObject": 1122334
                    },
                    "return": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.resetRTPCValue",
			"restrict": [ "userInterface" ],
            "description": "Reset the value of a real-time parameter control to its default value, as specified in the Wwise project. See <tt>AK::SoundEngine::ResetRTPCValue</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "rtpc": {
                        "$ref": "#/definitions/soundEngineObjectArg",
                        "description": "Either the ID (GUID), name, or short ID of the real-time parameter control."
                    },
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Associated game object ID"
                    }
                },
                "required": [ "rtpc", "gameObject" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Resetting an RTPC value using its name.",
                    "description": "Resets the value of \"rtpc\", using its name, to default for \"gameObject\".",
                    "args": {
                        "rtpc": "Rain_Intensity",
                        "gameObject": 1122334
                    },
                    "return": {
                    }
                },
                {
                    "title": "Resetting an RTPC value using its GUID.",
                    "description": "Resets the value of \"rtpc\", using its GUID, to default for \"gameObject\".",
                    "args": {
                        "rtpc": "{12345678-9012-3456-7896-156685135438}",
                        "gameObject": 1122334
                    },
                    "return": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.setRTPCValue",
			"restrict": [ "userInterface" ],
            "description": "Set the value of a real-time parameter control. See <tt>AK::SoundEngine::SetRTPCValue</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "rtpc": {
                        "$ref": "#/definitions/soundEngineObjectArg",
                        "description": "Either the ID (GUID), name, or short ID of the real-time parameter control."
                    },
                    "value": {
                        "type": "number",
                        "description": "Value to set."
                    },
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Associated game object ID."
                    }
                },
                "required": [ "rtpc", "value", "gameObject" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting an RTPC value using its name.",
                    "description": "Sets the value of \"rtpc\", using its name, to \"value\" for \"gameObject\".",
                    "args": {
                        "rtpc": "Rain_Intensity",
                        "value": 74,
                        "gameObject": 1122334
                    },
                    "return": {
                    }
                },
                {
                    "title": "Setting an RTPC value using its GUID.",
                    "description": "Sets the value of \"rtpc\", using its GUID, to \"value\" for \"gameObject\".",
                    "args": {
                        "rtpc": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "value": 1853,
                        "gameObject": 22556677
                    },
                    "return": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.setListenerSpatialization",
			"restrict": [ "userInterface" ],
            "description": "Set a listener's spatialization parameters. This lets you define listener-specific volume offsets for each audio channel. See <tt>AK::SoundEngine::SetListenerSpatialization</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "listener": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Listener game object ID."
                    },
                    "spatialized": {
                        "type": "boolean",
                        "description": "Spatialization toggle (true: enable spatialization, false: disable spatialization)."
                    },
                    "channelConfig": {
                        "$ref": "#/definitions/uint32",
                        "description": "Channel configuration associated with volumeOffsets. Use AK::AkChannelConfig::Serialize to serialize the value."
                    },
                    "volumeOffsets": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "maxItems": 4294967295
                        },
                        "description": "Per-speaker volume offset, in dB. See AkSpeakerVolumes.h for how to manipulate this array."
                    }
                },
                "required": [ "listener", "spatialized", "channelConfig", "volumeOffsets" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting the listener spacialization.",
                    "description": "Sets the spacialization for \"listener\" using \"volumeOffsets\" to pan to the left.",
                    "args": {
                        "listener": 555,
                        "spatialized": false,
                        "channelConfig": 12546,
                        "volumeOffsets": [ 0.0, -96.3 ]
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.soundengine.setMultiplePositions",
			"restrict": [ "userInterface" ],
            "description": "Set multiple positions for a single game object. Setting multiple positions for a single game object is a way to simulate multiple emission sources while using the resources of only one voice. This can be used to simulate wall openings, area sounds, or multiple objects emitting the same sound in the same area. See <tt>AK::SoundEngine::SetMultiplePositions</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Game Object identifier."
                    },
                    "positions": {
                        "type": "array",
                        "items": {
                            "maxItems": 65535,
                            "type": "object",
                            "properties": {
                                "position": {
                                    "type": "object",
                                    "description": "A 3D position to set for the game object.",
                                    "properties": {
                                        "orientationFront": {
                                            "type": "object",
                                            "description": "Orientation of the listener.",
                                            "properties": {
                                                "x": {
                                                    "type": "number",
                                                    "description": "X Position."
                                                },
                                                "y": {
                                                    "type": "number",
                                                    "description": "Y Position."
                                                },
                                                "z": {
                                                    "type": "number",
                                                    "description": "Z Position."
                                                }
                                            },
                                            "required": [ "x", "y", "z" ],
                                            "additionalProperties": false
                                        },
                                        "orientationTop": {
                                            "type": "object",
                                            "description": "Top orientation of the listener.",
                                            "properties": {
                                                "x": {
                                                    "type": "number",
                                                    "description": "X Position."
                                                },
                                                "y": {
                                                    "type": "number",
                                                    "description": "Y Position."
                                                },
                                                "z": {
                                                    "type": "number",
                                                    "description": "Z Position."
                                                }
                                            },
                                            "required": [ "x", "y", "z" ],
                                            "additionalProperties": false
                                        },
                                        "position": {
                                            "type": "object",
                                            "description": "Position of the listener",
                                            "properties": {
                                                "x": {
                                                    "type": "number",
                                                    "description": "X Position."
                                                },
                                                "y": {
                                                    "type": "number",
                                                    "description": "Y Position."
                                                },
                                                "z": {
                                                    "type": "number",
                                                    "description": "Z Position."
                                                }
                                            },
                                            "required": [ "x", "y", "z" ],
                                            "additionalProperties": false
                                        }
                                    },
                                    "required": [ "orientationFront", "orientationTop", "position" ],
                                    "additionalProperties": false
                                }
                            },
                            "required": [ "position" ],
                            "additionalProperties": false
                        },
                        "description": "Array of positions to apply."
                    },
                    "multiPositionType": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 2,
                        "description": "Use values from <tt>AK::SoundEngine::MultiPositionType</tt>."
                    }
                },
                "required": [ "gameObject", "positions", "multiPositionType" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting multiple positions for a game object.",
                    "description": "Sets \"gameObject\" to multiple positions, as defined in \"positions\", to simulate multiple sources for one playing sound.",
                    "args": {
                        "gameObject": 1122334,
                        "positions": [
                            {
                                "position": {
                                    "orientationFront": {
                                        "x": 5,
                                        "y": 20,
                                        "z": 10
                                    },
                                    "orientationTop": {
                                        "x": 70,
                                        "y": 150,
                                        "z": 6
                                    },
                                    "position": {
                                        "x": 70,
                                        "y": 150,
                                        "z": 10
                                    }
                                }
                            },
                            {
                                "position": {
                                    "orientationFront": {
                                        "x": -50,
                                        "y": 80,
                                        "z": 15
                                    },
                                    "orientationTop": {
                                        "x": 2,
                                        "y": 40,
                                        "z": 6
                                    },
                                    "position": {
                                        "x": 2,
                                        "y": -20,
                                        "z": 400
                                    }
                                }
                            }
                        ],
                        "multiPositionType": 1
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.soundengine.setPosition",
			"restrict": [ "userInterface" ],
            "description": "Set the position of a game object. See <tt>AK::SoundEngine::SetPosition</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Game Object identifier."
                    },
                    "position": {
                        "type": "object",
                        "description": "The 3D position to set for the game object.",
                        "properties": {
                            "orientationFront": {
                                "type": "object",
                                "description": "Orientation of the listener.",
                                "properties": {
                                    "x": {
                                        "type": "number",
                                        "description": "X Position."
                                    },
                                    "y": {
                                        "type": "number",
                                        "description": "Y Position."
                                    },
                                    "z": {
                                        "type": "number",
                                        "description": "Z Position."
                                    }
                                },
                                "required": [ "x", "y", "z" ],
                                "additionalProperties": false
                            },
                            "orientationTop": {
                                "type": "object",
                                "description": "Top orientation of the listener.",
                                "properties": {
                                    "x": {
                                        "type": "number",
                                        "description": "X Position."
                                    },
                                    "y": {
                                        "type": "number",
                                        "description": "Y Position."
                                    },
                                    "z": {
                                        "type": "number",
                                        "description": "Z Position."
                                    }
                                },
                                "required": [ "x", "y", "z" ],
                                "additionalProperties": false
                            },
                            "position": {
                                "type": "object",
                                "description": "Position of the listener",
                                "properties": {
                                    "x": {
                                        "type": "number",
                                        "description": "X Position."
                                    },
                                    "y": {
                                        "type": "number",
                                        "description": "Y Position."
                                    },
                                    "z": {
                                        "type": "number",
                                        "description": "Z Position."
                                    }
                                },
                                "required": [ "x", "y", "z" ],
                                "additionalProperties": false
                            }
                        },
                        "required": [ "orientationFront", "orientationTop", "position" ],
                        "additionalProperties": false
                    }
                },
                "required": [ "gameObject", "position" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting the position of a game object",
                    "description": "Sets the position of \"gameObject\" to \"position/position\" with the provided orientation.",
                    "args": {
                        "gameObject": 1122334,
                        "position": {
                            "orientationFront": {
                                "x": 100,
                                "y": 200,
                                "z": 0
                            },
                            "orientationTop": {
                                "x": 0,
                                "y": 0,
                                "z": 200
                            },
                            "position": {
                                "x": 5,
                                "y": 10,
                                "z": 100
                            }
                        }
                    },
                    "return": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.setScalingFactor",
			"restrict": [ "userInterface" ],
            "description": "Set the scaling factor of a game object. Modify the attenuation computations on this game object to simulate sounds with a larger or smaller area of effect. See <tt>AK::SoundEngine::SetScalingFactor</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "The game object identifier."
                    },
                    "attenuationScalingFactor": {
                        "type": "number",
                        "description": "The scaling factor, where 1 means 100%, 0.5 means 50%, 2 means 200%, and so on."
                    }
                },
                "required": [ "gameObject", "attenuationScalingFactor" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting the scaling factor of a game object",
                    "description": "Sets the scaling factor of \"gameObject\" to \"attenuationScalingFactor\" (200%).",
                    "args": {
                        "gameObject": 1122334,
                        "attenuationScalingFactor": 2
                    },
                    "return": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.setDefaultListeners",
			"restrict": [ "userInterface" ],
            "description": "Set a the default active listeners for all subsequent game objects that are registered. See <tt>AK::SoundEngine::SetDefaultListeners</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "listeners": {
                        "type": "array",
                        "items": {
                            "maxItems": 4294967295,
                            "$ref": "#/definitions/gameObject"
                        },
                        "description": "Array of listener game object IDs. Game objects must have been previously registered."
                    }
                },
                "required": [ "listeners" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting the list of default listeners",
                    "description": "Sets \"listeners\" as the list of default listeners.",
                    "args": {
                        "listeners": [
                            2233445,
                            5566778,
                            123456,
                            11222648
                        ]
                    },
                    "return": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.setListeners",
			"restrict": [ "userInterface" ],
            "description": "Set a single game object's active listeners. By default, all new game objects have no listeners active, but this behavior can be overridden with <tt>SetDefaultListeners()</tt>. Inactive listeners are not computed. See <tt>AK::SoundEngine::SetListeners</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "emitter": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Emitter game object."
                    },
                    "listeners": {
                        "type": "array",
                        "items": {
                            "maxItems": 4294967295,
                            "$ref": "#/definitions/gameObject"
                        },
                        "description": "Array of listener game object IDs. Game objects must have been previously registered."
                    }
                },
                "required": [ "emitter", "listeners" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting a list of listeners for a game object",
                    "description": "Sets \"listeners\" as the list of active listeners for \"gameObject\".",
                    "args": {
                        "emitter": 1122334,
                        "listeners": [
                            2233445,
                            5566778,
                            123456,
                            11222648
                        ]
                    },
                    "return": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.seekOnEvent",
			"restrict": [ "userInterface" ],
            "description": "Seek inside all playing objects that are referenced in Play Actions of the specified Event. See <tt>AK::SoundEngine::SeekOnEvent</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "event": {
                        "$ref": "#/definitions/soundEngineObjectArg",
                        "description": "Either the ID (GUID), name, or short ID of the Event."
                    },
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "Associated game object ID; use <tt>AK_INVALID_GAME_OBJECT</tt> to affect all game objects."
                    },
                    "position": {
                        "$ref": "#/definitions/int32",
                        "description": "Desired position where playback should restart, in milliseconds."
                    },
                    "percent": {
                        "type": "number",
                        "description": "Desired position where playback should restart, expressed in a percentage of the file's total duration, between 0 and 1.f. See note above about infinite looping sounds."
                    },
                    "seekToNearestMarker": {
                        "type": "boolean",
                        "description": "If true, the final seeking position will be made equal to the nearest marker."
                    },
                    "playingId": {
                        "$ref": "#/definitions/uint32",
                        "description": "Specify the playing ID for the seek to be applied to. Will result in the seek happening only on active actions of the playing ID. Use \\c AK_INVALID_PLAYING_ID or nothing, to seek on all active Actions of this Event ID."
                    }
                },
                "oneOf": [
                    { "required": [ "event", "gameObject", "position", "seekToNearestMarker", "playingId" ] },
                    { "required": [ "event", "gameObject", "percent", "seekToNearestMarker", "playingId" ] }
                ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Seeking to position 1 s",
                    "description": "Seeks on \"gameObject\" referenced in the Play Action of \"event\" at 1 second.",
                    "args": {
                        "event": "MyEventName",
                        "gameObject": 1122334,
                        "position": 1000,
                        "seekToNearestMarker": false,
                        "playingId": 0
                    },
                    "return": {
                    }
                },
                {
                    "title": "Seeking to 35% of duration",
                    "description": "Seeks on \"gameObject\" referenced in the Play Action of \"event\" at 35% of the duration.",
                    "args": {
                        "event": 5566123,
                        "gameObject": 1122334,
                        "percent": 0.35,
                        "seekToNearestMarker": false,
                        "playingId": 321654
                    },
                    "return": {
                    }
                }
            ]
        },
        {
            "id": "ak.soundengine.unregisterGameObj",
			"restrict": [ "userInterface" ],
            "description": "Unregister a game object. Registering a game object twice does nothing. Unregistering it once unregisters it no matter how many times it has been registered. Unregistering a game object while it is in use is allowed, but the control over the parameters of this game object is lost. For example, say a sound associated with this game object is a 3D moving sound. It will stop moving when the game object is unregistered, and there will be no way to regain control over the game object. See <tt>AK::SoundEngine::UnregisterGameObj</tt>.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "ID of the game object to be unregistered. Use \\c AK_INVALID_GAME_OBJECT to unregister all game objects."
                    }
                },
                "required": [ "gameObject" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Unregistering a game object",
                    "description": "Unregisters \"gameObject\".",
                    "args": {
                        "gameObject": 1122334
                    },
                    "return": {
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.waapi.getTopics",
            "restrict": [ "userInterface", "commandLine" ],
            "description": "Retrieve the list of topics to which a client can subscribe.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Topic URIs retrieved from the Wwise Authoring API schema."
                        }
                    }
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [ ]
        },
        {
            "id": "ak.wwise.waapi.getFunctions",
            "restrict": [ "userInterface", "commandLine" ],
            "description": "Retrieve the list of functions.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "functions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Function URIs retrieved from the Wwise Authoring API schema."
                        }
                    }
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [ ]
        },
        {
            "id": "ak.wwise.waapi.getSchema",
            "restrict": [ "userInterface", "commandLine" ],
            "description": "Retrieve the JSON schema of a Waapi URI.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "uri": {
                        "type": "string",
                        "description": "Waapi URI (see ak.wwise.waapi.getTopics, ak.wwise.waapi.getFunctions)."
                    }
                },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "argsSchema": {
                        "type": "object",
                        "properties": { },
                        "additionalProperties": true
                    },
                    "optionsSchema": {
                        "type": "object",
                        "properties": { },
                        "additionalProperties": true
                    },
                    "resultSchema": {
                        "type": "object",
                        "properties": { },
                        "additionalProperties": true
                    },
                    "publishSchema": {
                        "type": "object",
                        "properties": { },
                        "additionalProperties": true
                    }                    
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [ ]
        },
        {
            "id": "ak.wwise.ui.project.open",
			"restrict": [ "userInterface" ],
            "description": "Opens a project, specified by path.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "pattern": "\\.wproj$",
                        "description": "The path to the project file."
                    },
                    "onUpgrade": {
                        "type": "string",
                        "enum": [ "migrate", "fail" ],
                        "description": "The action to be done when opening a project that needs to be upgraded."
                    },
                    "bypassSave": {
                        "type": "boolean",
                        "description": "Indicate if the user should not be prompted to save the currently opened project."
                    }
                },
                "required": [ "path" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Open a project",
                    "description": "Opens the .wproj project specified in by path.",
                    "args": {
                        "path": "C:\\projects\\myWwiseProject.wproj",
                        "bypassSave": false
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.ui.project.close",
			"restrict": [ "userInterface" ],
            "description": "Closes the current project.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "bypassSave": {
                        "type": "boolean",
                        "description": "Indicate if the user should not be prompted to save the currently opened project."
                    }
                },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Closing the current project",
                    "description": "Closes the currently opened project.",
                    "args": { },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.project.save",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Saves the current project.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Saving the current project",
                    "description": "Saves the currently opened project.",
                    "args": { },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.object.setName",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Renames an object.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object to rename."
                    },
                    "value": {
                        "type": "string",
                        "description": "The new name of the object."
                    }
                },
                "required": [ "object", "value" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Renaming a WwiseObject",
                    "description": "Renames the object specified by \"object\" to \"value\".",
                    "args": {
                        "object": "{24979032-B170-43E3-A2E4-469E0193E2C3}",
                        "value": "new name"
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.object.setReference",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sets an object's reference value.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object which has the reference."
                    },
                    "platform": {
                        "$ref": "#/definitions/platformArg",
                        "description": "The ID (GUID) or path of the platform to link the reference.  Set to null-guid for unlinked reference."
                    },
                    "reference": {
                        "type": "string",
                        "description": "The name of the reference to set.  See the object's description in wobjects.xml for an object's possible references."
                    },
                    "value": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object to be referred to."
                    }
                },
                "required": [ "object", "reference", "value" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting an object reference",
                    "description": "",
                    "args": {
                        "object": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "platform": "{66666666-7777-8888-9999-AAAAAAAAAAAA}",
                        "reference": "OutputBus",
                        "value": "{FFFFFFFF-8888-4444-2222-111111111111}"
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.object.setProperty",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sets a property value of an object for a specific platform. Refer to \\ref wobjects_index for more information on the properties available on each object type.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object to set value."
                    },
                    "property": {
                        "type": "string",
                        "description": "The name of the property. For more information, refer to the property list of Wwise Objects listed in \\ref wobjects_index.",
                        "$ref":"#/definitions/propertyName"
                    },
                    "platform": {
                        "$ref": "#/definitions/platformArg",
                        "description": "The ID (GUID) or path of the platform."
                    },
                    "value": {
                        "$ref": "#/definitions/propertyValue",
                        "description": "The value of the object."
                    }
                },
                "required": [
                    "object",
                    "property",
                    "value"
                ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting the value of a specified property",
                    "description": "Sets the \"Volume\" property of the object defined by \"object\" to \"Value\".",
                    "args": {
                        "object": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "property": "Volume",
                        "platform": "{66666666-7777-8888-9999-AAAAAAAAAAAA}",
                        "value": 5.7
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.object.setNotes",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sets the object's notes.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object to set value."
                    },
                    "value": {
                        "type": "string",
                        "description": "The new notes of the object."
                    }
                },
                "required": [
                    "object",
                    "value"
                ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Setting the notes of an object",
                    "description": "Sets the notes of the object defined by \"object\".",
                    "args": {
                        "object": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "value": "This object's notes are set."
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.ui.commands.execute",
			"restrict": [ "userInterface" ],
            "description": "Executes a command. Some commands can take a list of objects as parameter. Refer to \\ref globalcommandsids for the available commands.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "The ID of the command to execute. Refer to \\ref globalcommandsids for the lists of commands."
                    },
                    "objects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/objectArg",
                            "description": "The ID (GUID) or path of the object. Some commands can take objects as arguments. Refer to the commands for more information."
                        }
                    }
                },
                "required": [ "command" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Find and Select objects in Project Explorer",
                    "description": "Finds the specified objects in the Project Explorer view (sync group 1), and select them.",
                    "args": {
                        "command": "FindInProjectExplorerSyncGroup1",
                        "objects": [ "{83D27335-6B94-4939-A01F-F00BEEB36E24}", "{A076AA65-B71A-45BB-8841-5A20C52CE727}" ]
                    },
                    "result": { }
                },
                {
                    "title": "Executing a command requiring the object's parameter",
                    "description": "Executes \"ConvertCurrentPlatform\" on objects defined by \"objects\" GUID's.",
                    "args": {
                        "command": "ConvertCurrentPlatform",
                        "objects": [ "{83D27335-6B94-4939-A01F-F00BEEB36E24}", "{A076AA65-B71A-45BB-8841-5A20C52CE727}" ]
                    },
                    "result": { }
                },
                {
                    "title": "Executing a command not requiring the object's parameter",
                    "description": "Executes the \"ResetAllMutes\" command.",
                    "args": {
                        "command": "ResetAllMutes"
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.ui.commands.getCommands",
            "restrict": [ "userInterface" ],
            "description": "Get the list of commands.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "required": [ ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "commands": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Command name which can be used with ak.wwise.ui.commands.execute."
                        }
                    }
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [ ]
        },
        {
            "id": "ak.wwise.ui.getSelectedObjects",
			"restrict": [ "userInterface" ],
            "description": "Retrieves the list of objects currently selected by the user in the active view.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "objects": {
                        "type": "array",
                        "description": "The selected objects, in the format specified in the options. Can be empty if no object is selected.",
                        "items": {
                            "$ref": "#/definitions/objectReturn",
                            "description": "The selected objects. Use the options to specify which data to return. Default will return id and name."
                        }
                    }
                },
                "required": [ "objects" ],
                "additionalProperties": false
            },
            "optionsSchema": {
                "$ref": "#/definitions/objectReturnOptions",
                "description": "Specifies the return options for every object returned."
            },
            "examples": [
                {
                    "title": "Get a single selected object",
                    "description": "Retrieves the GUID of the selected object",
                    "args": { },
                    "result": {
                        "objects": [
                            {
                                "id": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                                "name": "MySound"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.object.getAttenuationCurve",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Gets the specified attenuation curve for a given attenuation object.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of attenuation object."
                    },
                    "platform": {
                        "$ref": "#/definitions/platformArg",
                        "description": "The ID (GUID) or path of the platform to get curves.  Set to null-guid for unlinked reference."
                    },
                    "curveType": {
                        "type": "string",
                        "enum": [ "VolumeDryUsage", "VolumeWetGameUsage", "VolumeWetUserUsage", "LowPassFilterUsage", "HighPassFilterUsage", "SpreadUsage", "FocusUsage" ],
                        "description": "Type of attenuation curve."
                    }
                },
                "required": [ "object", "curveType" ]
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "curveType": {
                        "type": "string",
                        "enum": [ "VolumeDryUsage", "VolumeWetGameUsage", "VolumeWetUserUsage", "LowPassFilterUsage", "HighPassFilterUsage", "SpreadUsage", "FocusUsage" ],
                        "description": "Name of attenuation curve."
                    },
                    "use": {
                        "type": "string",
                        "enum": [ "None", "Custom", "UseVolumeDry" ],
                        "description": "Defines if the curve has no points, has its own set of points, or uses those of the VolumeDryUsage curve."
                    },
                    "points": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "x": {
                                    "type": "number",
                                    "description": "X coordinate of curve point."
                                },
                                "y": {
                                    "type": "number",
                                    "description": "Y coordinate of curve point."
                                },
                                "shape": {
                                    "type": "string",
                                    "description": "Shape of curve segment between this point and the next.",
                                    "enum": [ "Constant", "Linear", "Log3", "Log2", "Log1", "InvertedSCurve", "SCurve", "Exp1", "Exp2", "Exp3" ]
                                }
                            },
                            "required": [ "x", "y", "shape" ],
                            "additionalProperties": false
                        }
                    }
                }
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Getting an attenuation curve of an object",
                    "description": "Gets the \"curve\" from an object specified by \"object\"",
                    "args": {
                        "object": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "platform": "{66666666-7777-8888-9999-AAAAAAAAAAAA}",
                        "curveType": "VolumeDryUsage"
                    },
                    "result": {
                        "curveType": "VolumeDryUsage",
                        "points": [
                            {
                                "shape": "Exp3",
                                "x": 0,
                                "y": 0
                            },
                            {
                                "shape": "SCurve",
                                "x": 30,
                                "y": -3
                            },
                            {
                                "shape": "Log1",
                                "x": 60,
                                "y": -5
                            },
                            {
                                "shape": "Linear",
                                "x": 100,
                                "y": -200
                            }
                        ],
                        "use": "Custom"
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.object.setAttenuationCurve",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sets the specified attenuation curve for a given attenuation object.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of attenuation object."
                    },
                    "platform": {
                        "$ref": "#/definitions/platformArg",
                        "description": "The ID (GUID) or path of the platform to set curves.  Set to null-guid for unlinked curve."
                    },
                    "curveType": {
                        "type": "string",
                        "enum": [ "VolumeDryUsage", "VolumeWetGameUsage", "VolumeWetUserUsage", "LowPassFilterUsage", "HighPassFilterUsage", "SpreadUsage", "FocusUsage" ],
                        "description": "Type of attenuation curve."
                    },
                    "use": {
                        "type": "string",
                        "enum": [ "None", "Custom", "UseVolumeDry" ],
                        "description": "Defines if the curve has no points, has its own set of points, or uses those of the VolumeDryUsage curve."
                    },
                    "points": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "x": {
                                    "type": "number",
                                    "description": "X coordinate of curve point."
                                },
                                "y": {
                                    "type": "number",
                                    "description": "Y coordinate of curve point."
                                },
                                "shape": {
                                    "type": "string",
                                    "description": "Shape of curve segment between this point and the next.",
                                    "enum": [ "Constant", "Linear", "Log3", "Log2", "Log1", "InvertedSCurve", "SCurve", "Exp1", "Exp2", "Exp3" ]
                                }
                            },
                            "required": [ "x", "y", "shape" ],
                            "additionalProperties": false
                        }
                    }
                },
                "required": [ "object", "curveType", "use", "points" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Defining an attenuation curve of an object",
                    "description": "Defines the \"object\"'s attenuation curve for \"curveType\" by setting a serie of \"points\".",
                    "args": {
                        "object": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "platform": "{66666666-7777-8888-9999-AAAAAAAAAAAA}",
                        "curveType": "VolumeDryUsage",
                        "use": "Custom",
                        "points": [
                            {
                                "x": 0,
                                "y": 0,
                                "shape": "Exp1"
                            },
                            {
                                "x": 8,
                                "y": -1,
                                "shape": "SCurve"
                            },
                            {
                                "x": 25,
                                "y": -2,
                                "shape": "Constant"
                            }
                        ]
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.switchContainer.addAssignment",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Assign a Switch Container's child to a Switch. This is the equivalent of doing a drag&drop of the child to a state in the Assigned Objects view. The child is always added at the end for each state.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "child": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object to assign to a State. This object must be the child of a Switch Container."
                    },
                    "stateOrSwitch": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the State or Switch with which to assign. Must be the child of the Switch Group or State Group that is currently set for the Switch Container."
                    }
                },
                "required": [ "child", "stateOrSwitch" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [],
                "properties": {},
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Assign a Switch Container's child to a State.",
                    "description": "Equivalent to dragging a child of a Switch Group to a State listed in the Assigned Objects view.",
                    "args": {
                        "child": "{7A12D08F-B0D9-4403-9EFA-2E6338C197C1}",
                        "stateOrSwitch": "{A076AA65-B71A-45BB-8841-5A20C52CE727}"
                    },
                    "result": {
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.switchContainer.removeAssignment",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Remove an assignment between a Switch Container's child and a State.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "child": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object assigned to a State. This object must be the child of a Switch Container and must be currently assigned to a State."
                    },
                    "stateOrSwitch": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the State or Switch to which the child is assigned. Must be the child of the Switch Group or State Group that is currently set for the Switch Container."
                    }
                },
                "required": [ "child", "stateOrSwitch" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [],
                "properties": {},
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Remove an assignment from a Switch Container.",
                    "description": "Equivalent to select and delete a child assigned to a State in the Assigned Objects view.",
                    "args": {
                        "child": "{7A12D08F-B0D9-4403-9EFA-2E6338C197C1}",
                        "stateOrSwitch": "{A076AA65-B71A-45BB-8841-5A20C52CE727}"
                    },
                    "result": {
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.switchContainer.getAssignments",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Returns the list of assignments between a Switch Container's children and states.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the Switch Container."
                    }
                },
                "required": [ "id" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "return": {
                        "description": "List of assignments (pairs of child and state).",
                        "items": [
                            {
                                "type": "object",
                                "properties": {
                                    "child": {
                                        "$ref": "#/definitions/objectArg",
                                        "description": "The ID (GUID) or path of the child assigned to a State."
                                    },
                                    "stateOrSwitch": {
                                        "$ref": "#/definitions/objectArg",
                                        "description": "The ID (GUID) or path of the State or Switch to which the child is assigned."
                                    }
                                },
                                "required": [ "child", "stateOrSwitch" ],
                                "additionalProperties": false
                            }
                        ]
                    }
                }
            },
            "optionsSchema": {
                "type": "object",
                "required": [],
                "properties": {},
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Assignments of a Switch Container.",
                    "description": "Get the list of assignments for a Switch Container.",
                    "args": {
                        "id": "{7A12D08F-B0D9-4403-9EFA-2E6338C197C1}"
                    },
                    "result": {
                        "return": [
                            {
                                "child": "{7A12D08F-B0D9-4403-9EFA-2E6338C197C1}",
                                "stateOrSwitch": "{A076AA65-B71A-45BB-8841-5A20C52CE727}"
                            },
                            {
                                "child": "{8B12D08F-B0D9-4403-9EFA-2E6338C197D1}",
                                "stateOrSwitch": "{B076BB65-B71A-45BB-8841-5A20C52CE738}"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.object.create",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Creates an object of type 'type', as a child of 'parent'.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "parent": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the parent of the new object."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the new object. Refer to \\ref wobjects_index for possible object types."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the new object."
                    },
                    "onNameConflict": {
                        "type": "string",
                        "description": "The action to take if \"parent\" already has a child with the same name. Default value is \"fail\". Refer to \\ref waapi_create_objects_modes for more information.",
                        "enum": [ "rename", "replace", "fail", "merge" ]
                    },
                    "platform": {
                        "$ref": "#/definitions/platformArg",
                        "description": "The ID (GUID) or path of the platform used when setting properties via this command. Not specifying a platform sets the value for all linked platforms."
                    },
                    "notes": {
                        "type": "string"
                    },
                    "children": {
                        "type": "array",
                        "description": "A list of child objects to be created.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "The type of the new object.  Refer to \\ref wobjects_index for possible object types."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new object."
                                },
                                "notes": {
                                    "type": "string"
                                },
                                "children": {
                                    "$ref": "#/properties/children"
                                }
                            },
                            "patternProperties": {
                                "^@[_a-zA-Z][_a-zA-Z0-9]*$": {
                                    "description": "Sets the value of property \\@propertyName. Refer to \\ref wobjects_index for property names.",
                                    "$ref": "#/definitions/propertyValue"
                                }
                            },
                            "required": [ "type", "name" ],
                            "additionalProperties": false
                        }
                    }
                },
                "patternProperties": {
                    "^@[_a-zA-Z][_a-zA-Z0-9]*$": {
                        "description": "Sets the value of property \\@propertyName.  Refer to \\ref wobjects_index for property names.",
                        "$ref": "#/definitions/propertyValue"
                    }
                },
                "required": [ "type", "name", "parent" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the newly created Object."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the newly created Object."
                    },
                    "children": {
                        "type": "array",
                        "items": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "pattern": "^\\{[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\\}$"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "children": {
                                        "$ref": "#/properties/children"
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Create a Sound object.",
                    "description": "Create a new Sound object called 'Boom' under the specified parent.",
                    "args": {
                        "parent": "{7A12D08F-B0D9-4403-9EFA-2E6338C197C1}",
                        "type": "Sound",
                        "name": "Boom"
                    },
                    "result": {
                        "id": "{66666666-7777-8888-9999-AAAAAAAAAAAA}",
                        "name": "Boom"
                    }
                },
                {
                    "title": "Create a virtual folder.",
                    "description": "Create a new virtual folder called 'Guns' under the default work unit. If a folder with the same name already exists, it will automatically find a unique name.",
                    "args": {
                        "parent": "\\Actor-Mixer Hierarchy\\Default Work Unit",
                        "type": "Folder",
                        "name": "Guns",
                        "onNameConflict": "rename"
                    },
                    "result": {
                        "id": "{66666666-7777-8888-9999-AAAAAAAAAAAA}",
                        "name": "Guns"
                    }
                },
                {
                    "title": "Create a Play Event on a Sound",
                    "description": "Create an event called 'Play_SFX' under the virtual folder 'WAAPI', with Play action on the SFX sound object.",
                    "args": {
                        "parent": "\\Events\\Default Work Unit",
                        "type": "Folder",
                        "name": "WAAPI",
                        "onNameConflict": "merge",
                        "children": [
                            {
                                "type": "Event",
                                "name": "Play_SFX",
                                "children": [
                                    {
                                        "name": "",
                                        "type": "Action",
                                        "@ActionType": 1,
                                        "@Target": "\\Actor-Mixer Hierarchy\\Default Work Unit\\SFX"
                                    }
                                ]
                            }
                        ]
                    },
                    "result": {
                        "id": "{6114659F-9274-4031-B90E-F369568532E0}",
                        "name": "WAAPI",
                        "children": [
                            {
                                "id": "{F546017D-201A-49BD-8D4E-0A28F5DBB28D}",
                                "name": "Play_SFX",
                                "children": [
                                    {
                                        "id": "{400D0354-0FDB-48B4-B341-9DFA0B76078D}",
                                        "name": ""
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "title": "Create a Random Container with 2 sound objects.",
                    "description": "Create a Random Container called 'Boom' under the specified parent, with two Sound objects 'A' and 'B'.",
                    "args": {
                        "parent": "{7A12D08F-B0D9-4403-9EFA-2E6338C197C1}",
                        "type": "RandomSequenceContainer",
                        "name": "Boom",
                        "@RandomOrSequence": 1,
                        "children": [
                            {
                                "type": "Sound",
                                "name": "A"
                            },
                            {
                                "type": "Sound",
                                "name": "B"
                            }
                        ]
                    },
                    "result": {
                        "id": "{66666666-7777-8888-9999-AAAAAAAAAAAA}",
                        "name": "Boom",
                        "children": [
                            {
                                "id": "{46813545-2168-3547-8328-681AB678D6F5}",
                                "name": "A"
                            },
                            {
                                "id": "{68465134-2548-2377-3541-321354318ASD}",
                                "name": "B"
                            }

                        ]
                    }
                }

            ]
        },
        {
            "id": "ak.wwise.core.object.move",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Moves an object to the given parent.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object to be moved."
                    },
                    "parent": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object's new parent."
                    },
                    "onNameConflict": {
                        "type": "string",
                        "description": "The action to take if \"parent\" already has a child with the same name. Default value is \"fail\".",
                        "enum": [ "rename", "replace", "fail" ]
                    }
                },
                "required": [ "object", "parent" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "$ref": "#/definitions/objectReturn",
                "description": "The moved object."
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Move an object to a new parent.",
                    "description": "Moves object \"id\" and makes it a child of \"parent\". The object will fail if \"parent\" already contains a child with the same name.",
                    "args": {
                        "object": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "parent": "{66666666-7777-8888-9999-AAAAAAAAAAAA}"
                    },
                    "result": {
                        "id": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "name": "myObjectName",
                        "type": "Sound",
                        "path": "\\Actor-Mixer Hierarchy\\Default Work Unit\\myObjectName",
                        "shortId": 12345
                    }
                },
                {
                    "title": "Move an object to a parent containing a child of the same name.",
                    "description": "Moves object \"id\" and makes it a child of \"parent\".  The object will be renamed if \"parent\" already contains a child with the same name.",
                    "args": {
                        "object": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "parent": "{66666666-7777-8888-9999-AAAAAAAAAAAA}",
                        "onNameConflict": "rename"
                    },
                    "result": {
                        "id": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "name": "new_object_name",
                        "type": "Sound",
                        "path": "\\Actor-Mixer Hierarchy\\Default Work Unit\\Sound1",
                        "shortId": 456678
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.object.copy",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Copies an object to the given parent.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object to be copied."
                    },
                    "parent": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object's new parent."
                    },
                    "onNameConflict": {
                        "type": "string",
                        "description": "The action to take if \"parent\" already has a child with the same name. Default value is \"fail\".",
                        "enum": [ "rename", "replace", "fail" ]
                    }
                },
                "required": [ "object", "parent" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "description": "The copied object.",
                "$ref": "#/definitions/objectReturn"
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Copy an object to the given parent.",
                    "description": "Copies object specified by the \"object\" ID and makes that copy a child of \"parent\". The object will be renamed if \"parent\" already contains a child with the same name.",
                    "args": {
                        "object": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "parent": "{66666666-7777-8888-9999-AAAAAAAAAAAA}",
                        "onNameConflict": "rename"
                    },
                    "result": {
                        "id": "{AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE}",
                        "name": "new_object_name",
                        "type": "Sound",
                        "path": "\\Actor-Mixer Hierarchy\\Default Work Unit\\Sound1",
                        "shortId": 1234
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.object.delete",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Deletes the specified object.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object to be deleted."
                    }
                },
                "required": [ "object" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Deleting an object by GUID.",
                    "description": "Deletes the object specified by GUID.",
                    "args": {
                        "object": "{A076AA65-B71A-45BB-8841-5A20C52CE727}"
                    },
                    "result": {
                    }
                },
                {
                    "title": "Deleting an object by path.",
                    "description": "Deletes the MyTone object specified by its path.",
                    "args": {
                        "object": "\\Actor-Mixer Hierarchy\\Default Work Unit\\MyTone"
                    },
                    "result": {
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.object.get",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Performs a query, returns specified data for each object in query result. Refer to \\ref waapi_query for more information.",
            "argsSchema": {
                "type": "object",
                "properties": {

                    "from": {
                        "description": "The query starting point.",
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "array",
                                        "items": {
                                            "oneOf": [
                                                {
                                                    "$ref": "#/definitions/guid"
                                                },
                                                {
                                                    "$ref": "#/definitions/shortId"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "required": [ "id" ],
                                "additionalProperties": false
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "search": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "minItems": 1,
                                        "maxItems": 1
                                    }
                                },
                                "required": [ "search" ],
                                "additionalProperties": false
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "path": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [ "path" ],
                                "additionalProperties": false
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "ofType": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [ "ofType" ],
                                "additionalProperties": false
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "query": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/definitions/guid"
                                        },
                                        "minItems": 1,
                                        "maxItems": 1
                                    }
                                },
                                "required": [ "query" ],
                                "additionalProperties": false
                            }
                        ]
                    },
                    "transform": {
                        "description": "Sequential transformations on object list returned by \"from\".",
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "select": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [ "parent", "children", "descendants", "ancestors" ]
                                            },
                                            "minItems": 1,
                                            "maxItems": 1
                                        }
                                    },
                                    "required": [ "select" ],
                                    "additionalProperties": false
                                },
                                {
                                    "type": "string",
                                    "description": "Unique object instances are returned, i.e. no duplicate object is returned.",
                                    "enum": [ "distinct" ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "range": {
                                            "type": "array",
                                            "items": {
                                                "type": "number"
                                            },
                                            "minItems": 2,
                                            "maxItems": 2
                                        }
                                    },
                                    "required": [ "range" ],
                                    "additionalProperties": false
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "where": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    { "type": "string" },
                                                    { "type": "number" },
                                                    { "type": "boolean" },
                                                    { "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                ]
                                            },
                                            "minItems": 1
                                        }
                                    },
                                    "required": [ "where" ],
                                    "additionalProperties": false
                                }
                            ]
                        }
                    }
                },
                "required": [ "from" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "return": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/objectReturn",
                            "description": "One json object per object found, with properties matching what was supplied in options."
                        }
                    }
                }
            },
            "optionsSchema": {
                "$ref": "#/definitions/objectReturnOptions",
                "description": "Specifies the return options for every object returned."
            },
            "examples": [
                {
                    "title": "Get an object's name.",
                    "description": "Retrieves the object's name property.",
                    "args": {
                        "from": {
                            "id": [ "{24979032-B170-43E3-A2E4-469E0193E2C3}" ]
                        }
                    },
                    "options": {
                        "return": [ "name" ]
                    },
                    "result": {
                        "return": [
                            {
                                "name": "MyObjectName"
                            }
                        ]
                    }
                },
                {
                    "title": "Get the properties and references of an object.",
                    "description": "Uses the property accessor @ to get the voice volume and the output bus of an object.",
                    "args": {
                        "from": {
                            "id": [ "{24979032-B170-43E3-A2E4-469E0193E2C3}" ]
                        }
                    },
                    "options": {
                        "return": [ "@Volume", "@OutputBus" ]
                    },
                    "result": {
                        "return": [
                            {
                                "@Volume": 2.3,
                                "@OutputBus": {
                                    "id": "{1514A4D8-1DA6-412A-A17E-75CA0C2149F3}",
                                    "name": "Master Audio Bus"
                            }
                            }
                        ]
                    }
                },
                {
                    "title": "Get the output bus being used.",
                    "description": "Uses the double @@ to access the output bus reference using the source of override. It will use the override parent values to determine the source of override.",
                    "args": {
                        "from": {
                            "id": [ "{24979032-B170-43E3-A2E4-469E0193E2C3}" ]
                        }
                    },
                    "options": {
                        "return": [ "@@OutputBus" ]
                    },
                    "result": {
                        "return": [
                            {
                                "@@OutputBus": {
                                    "id": "{1514A4D8-1DA6-412A-A17E-75CA0C2149F3}",
                                    "name": "Master Audio Bus"
                            }
                            }
                        ]
                    }
                },
                {
                    "title": "Get the descendants objects matching a filter.",
                    "description": "From all descendants in the actor-mixer hierarchy, return the objects whose name start with My. This uses the regular expression '^my'.",
                    "args": {
                        "from": {
                            "path": [ "\\Actor-Mixer Hierarchy" ]
                        },
                        "transform": [
                            { "select": [ "descendants" ] },
                            { "where": [ "name:matches", "^my" ] }
                        ]
                    },
                    "options": {
                        "return": [ "name" ]
                    },
                    "result": {
                        "return": [
                            {
                                "name": "MySound"
                            },
                            {
                                "name": "MyRandomContainer"
                            }
                        ]
                    }
                },
                {
                    "title": "Get all platforms.",
                    "description": "Retrieves the platform ids and names.",
                    "args": {
                        "from": {
                            "ofType": [ "Platform" ]
                        }
                    },
                    "options": {
                        "return": [
                            "id",
                            "name"
                        ]
                    },
                    "result": {
                        "return": [
                            {
                                "id": "{8237B143-A4F0-4B01-8C7B-FFC53A888271}",
                                "name": "Windows"
                            },
                            {
                                "id": "{508A9810-5C76-4CF7-B9BB-D6AE396F973B}",
                                "name": "iOS"
                            }
                        ]
                    }
                },
                {
                    "title": "Get the project name, path and dirty state.",
                    "description": "Retrieves the project name, file path and dirty state. Note that the project name is defined in the wproj xml, and may not match the file name.",
                    "args": {
                        "from": {
                            "ofType": [ "Project" ]
                        }
                    },
                    "options": {
                        "return": [
                            "name",
                            "filePath",
                            "workunit:isDirty"
                        ]
                    },
                    "result": {
                        "return": [
                            {
                                "filePath": "C:\\WwiseProjects\\MyProject\\MyProject.wproj",
                                "name": "MyProject",
                                "workunit:isDirty": true
                            }
                        ]
                    }
                },
                {
                    "title": "Search objects.",
                    "description": "Search objects with 'gun' in the name.",
                    "args": {
                        "from": {
                            "search": [ "gun" ]
                        }
                    },
                    "options": {
                        "return": [
                            "id",
                            "name"
                        ]
                    },
                    "result": {
                        "return": [
                            {
                                "id": "{8237B143-A4F0-4B01-8C7B-FFC53A888271}",
                                "name": "Big Gun"
                            },
                            {
                                "id": "{508A9810-5C76-4CF7-B9BB-D6AE396F973B}",
                                "name": "Small Gun"
                            }
                        ]
                    }
                },
                {
                    "title": "Get all objects containing a sound object.",
                    "description": "Retrieves the id of objects with at least one child being a sound object. Duplicates are filtered out using the \"distinct\" transform.",
                    "args": {
                        "from": {
                            "ofType": [ "Sound" ]
                        },
                        "transform": [
                            { "select": [ "parent" ] },
                            "distinct"
                        ]
                    },
                    "options": {
                        "return": [
                            "id",
                            "name"
                        ]
                    },
                    "result": {
                        "return": [
                            {
                                "id": "{01181963-13CA-4946-B4C2-7A04BF727596}",
                                "name": "Folder0"
                            },
                            {
                                "id": "{F9912AA4-7835-4828-99E6-C327840EFE3D}",
                                "name": "Folder1"
                }
            ]
                    }
                },
                {
                    "title": "Search objects of a certain type.",
                    "description": "Retrieves the id, name and notes of objects with \"Tone\" in their text properties and filters the result to retrieve only those of type \"Sound\". Refer to \\ref wobjects_index for the types available.",
                    "args": {
                        "from": {
                            "search": [ "Tone" ]
                        },
                        "transform": [
                            { "where": ["type:isIn", [ "Sound" ]] }
                        ]
                    },
                    "options": {
                        "return": [
                            "id",
                            "name",
                            "notes"
                        ]
                    },
                    "result": {
                        "return": [
                            {
                                "id": "{24979032-B170-43E3-A2E4-469E0193E2C3}",
                                "name": "Tone SFX",
                                "notes": "MyNotes"
                            },
                            {
                                "id": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                                "name": "MyTone",
                                "notes": ""
                            },
                            {
                                "id": "{72CB44BE-C699-4032-B615-EEFD0E707FFC}",
                                "name": "MyToneToMove",
                                "notes": ""
                }
            ]
                    }
        },
        {
                    "title": "Search objects of a certain category.",
                    "description": "Retrieves the id and name of objects with \"Tone\" in their text properties and filters the result to retrieve only those within the category \"AudioObjects\".",
                    "args": {
                        "from": {
                            "search": [ "Tone" ]
                        },
                        "transform": [
                            { "where": ["category:isIn", [ "AudioObjects" ]] }
                        ]
                    },
                    "options": {
                        "return": [
                            "id",
                            "name",
                            "notes"
                        ]
                    },
                    "result": {
                        "return": [
                            {
                                "id": "{24979032-B170-43E3-A2E4-469E0193E2C3}",
                                "name": "Tone SFX"
                            },
                            {
                                "id": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                                "name": "MyTone"
                            },
                            {
                                "id": "{72CB44BE-C699-4032-B615-EEFD0E707FFC}",
                                "name": "MyToneToMove"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.audio.import",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Scripted object creation and audio file import. The contents of this command very closely mirror that of a tab-delimited import file. See \\ref ak_wwise_core_audio_importtabdelimited.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "importOperation": {
                        "type": "string",
                        "description": "Determines how import object creation is performed. For each object created:\n- createNew: will create a new object; the object will be given the desired name if possible, otherwise a new unique name will be used.\n- useExisting: will use the object if it exists, updating the specified properties; otherwise it will create a new object. This is the default value.\n- replaceExisting: will create a new object; if an existing object has the same name then the existing object is destroyed.",
                        "enum": [ "createNew", "useExisting", "replaceExisting" ]
                    },
                    "default": {
                        "type": "object",
                        "description": "Default values for each item in \"imports\".",
                        "properties": {
                            "importLanguage": {
                                "type": "string",
                                "description": "Import language for audio file import (see documentation for possible values)."
                            },
                            "importLocation": {
                                "$ref": "#/definitions/objectArg",
                                "description": "Object ID (GUID) or path used as root relative object paths."
                            },
                            "audioFile": {
                                "type": "string",
                                "description": "Path to media file to import."
                            },
                            "audioFileBase64": {
                                "type": "string",
                                "description": "Base64 encoded WAV audio file data to import with its target file path relative to the Originals folder, separated by a vertical bar. E.g. 'MySound.wav|UklGRu...'.",
                                "pattern": "^(.+\\.wav\\|((?:[A-Za-z0-9\\+\\/]{4})*(?:[A-Za-z0-9\\+\\/]{2}==|[A-Za-z0-9\\+\\/]{3}=))+)$"
                            },
                            "originalsSubFolder": {
                                "type": "string",
                                "description": "Specifies the originals sub-folder in which to place the imported audio file.  This folder is relative to the originals folder in which the file would normally be imported. Example: if importing an SFX, then the audio file will be imported to the folder Originals\\\\SFX\\\\orignalsPath."
                            },
                            "objectPath": {
                                "type": "string",
                                "description": "The path and name of the object(s) to be created. The path uses backslashes and can either be absolute or relative."
                            },
                            "objectType": {
                                "type": "string",
                                "description": "Specifies the type of the object to create when importing an audio file."
                            },
                            "notes": {
                                "type": "string",
                                "description": "The \"Notes\" field of the created object."
                            },
                            "audioSourceNotes": {
                                "type": "string",
                                "description": "The \"Notes\" field of the created audio source object."
                        },
                            "switchAssignation": {
                                "type": "string",
                                "description": "Defines a Switch Group or State Group that will be associated to a Switch Container, within the Actor-Mixer Hierarchy only. Also defines which Switch Container's child will be assigned to which Switch or State from the associated group. Refer to Tab Delimited Import in the Wwise Help documentation for more information."
                            },
                            "event": {
                                "type": "string",
                                "description": "Defines the path and name of an Event to be created for the imported object. Refer to Tab Delimited Import in the Wwise Help documentation for more information."
                            },
                            "dialogueEvent": {
                                "type": "string",
                                "description": "Defines the path and name of a Dialogue Event to be created for the imported object. Refer to Tab Delimited Import in the Wwise Help documentation for more information."
                            }
                        },
                        "patternProperties": {
                            "^@[_a-zA-Z][_a-zA-Z0-9]*$": {
                                "description": "Specify the value of the property. Refer to \\ref wobjects_index for the properties available.",
                                "$ref": "#/definitions/propertyValue"
                            }
                        },
                        "additionalProperties": false
                    },
                    "imports": {
                        "type": "array",
                        "description": "Array of import commands.",
                        "items": {
                            "type": "object",
                            "description": "Import command. The members of this object are combined with those of \"default\", with this object's members having precedence. In addition to the listed properties, you can also set wobject properties and references using @Property; for instance, set the volume by adding the @Volume property. References that have constraints from other references, such as a Switch Container's State/Switch which is constrained to being a child of a State/Switch Group, should not be set because WAAPI does not ensure that a reference is set in the required order.",
                            "properties": {
                                "importLanguage": { "$ref": "#/properties/default/properties/importLanguage" },
                                "importLocation": { "$ref": "#/properties/default/properties/importLocation" },
                                "audioFile": { "$ref": "#/properties/default/properties/audioFile" },
                                "audioFileBase64": { "$ref": "#/properties/default/properties/audioFileBase64" },
                                "originalsSubFolder": { "$ref": "#/properties/default/properties/originalsSubFolder" },
                                "objectPath": { "$ref": "#/properties/default/properties/objectPath" },
                                "objectType": { "$ref": "#/properties/default/properties/objectType" },
                                "notes": { "$ref": "#/properties/default/properties/notes" },
                                "audioSourceNotes": { "$ref": "#/properties/default/properties/audioSourceNotes" },
                                "switchAssignation": { "$ref": "#/properties/default/properties/switchAssignation" },
                                "event": { "$ref": "#/properties/default/properties/event" },
                                "dialogueEvent": { "$ref": "#/properties/default/properties/dialogueEvent" }
                            },
                            "patternProperties": {
                                "^@[_a-zA-Z][_a-zA-Z0-9]*$": {
                                    "description": "Specify the value of the property. Refer to \\ref wobjects_index for the properties available.",
                                    "$ref": "#/definitions/propertyValue"
                                }
                            },
                            "additionalProperties": false,
                            "required": [ "objectPath" ]
                        }
                    }
                },
                "required": [ "imports" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Importing a new SFX and setting a value to a property",
                    "description": "Creates a new SFX under \"objectPath\", setting its volume attribute to 1.",
                    "args": {
                        "importOperation": "createNew",
                        "default": { },
                        "imports": [
                            {
                                "importLanguage": "SFX",
                                "@Volume": "1",
                                "objectPath": "\\Actor-Mixer Hierarchy\\Script Import\\<Actor-Mixer>Test 0\\<Sequence Container>Container 0\\<Sound SFX>My SFX 0"
                            }
                        ]
                    },
                    "result": { }
                },
                {
                    "title": "Importing audio files to SFXs WwiseObjects",
                    "description": "Imports files specified by \"audioFile\" into \"objectPath\"",
                    "args": {
                        "importOperation": "useExisting",
                        "default": {
                            "importLanguage": "SFX"
                        },
                        "imports": [
                            {
                                "audioFile": "C:\\audio1.wav",
                                "objectPath": "\\Actor-Mixer Hierarchy\\Script Import\\<Sequence Container>Test 0\\<Sound SFX>My SFX 0"
                            },
                            {
                                "audioFile": "C:\\audio1.wav",
                                "objectPath": "\\Actor-Mixer Hierarchy\\Script Import\\<Sequence Container>Test 0\\<Sound SFX>Dummy SFX 1"
                            }
                        ]
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.audio.importTabDelimited",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Scripted object creation and audio file import from a tab-delimited file.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "importLocation": {
                        "$ref": "#/definitions/objectArg",
                        "description": "Object ID (GUID) or path used as root relative object paths."
                    },
                    "importLanguage": {
                        "type": "string",
                        "description": "Import language for audio file import (see documentation for possible values)."
                    },
                    "importOperation": {
                        "type": "string",
                        "description": "Determines how import object creation is performed. For each object created:\n- createNew: will create a new object; the object will be given the desired name if possible, otherwise a new unique name will be used.\n- useExisting: will use the object if it exists, updating the specified properties; otherwise it will create a new object. This is the default value.\n- replaceExisting: will create a new object; if an existing object has the same name then the existing object is destroyed.",
                        "enum": [ "createNew", "useExisting", "replaceExisting" ]
                    },
                    "importFile": {
                        "type": "string",
                        "description": "Location of tab-delimited import file."
                    }
                },
                "required": [ "importLanguage", "importOperation", "importFile" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Importing an audio file",
                    "description": "Imports an audio file from a tab-delimited file",
                    "args": {
                        "importLocation": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "importLanguage": "SFX",
                        "importOperation": "createNew",
                        "importFile": "C:\\MyWaves\\MyFolder\\myImportFile.txt"
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.remote.connect",
			"restrict": [ "userInterface" ],
            "description": "Connects the Wwise Authoring application to a Wwise Sound Engine running executable. The host must be running code with communication enabled.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "host": {
                        "type": "string",
                        "description": "The host to connect to. The host can be an IPv4 address or a computer name. Use 127.0.0.1 to connect to localhost."

                    }

                },
                "required": [ "host" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Connecting to game",
                    "description": "Connects to a game or other Wwise runtime running on the same computer.",
                    "args": {
                        "host": "127.0.0.1"
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.remote.disconnect",
			"restrict": [ "userInterface" ],
            "description": "Disconnects the Wwise Authoring application from a connected Wwise Sound Engine running executable.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Disconnecting from a game",
                    "description": "Disconnect from the currently connected game or process.",
                    "args": { },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.remote.getAvailableConsoles",
			"restrict": [ "userInterface" ],
            "description": "Retrieves all consoles available for connecting Wwise Authoring to a Sound Engine instance.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "consoles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the remote console as returned by the executable."
                                },
                                "platform": {
                                    "type": "string",
                                    "description": "Platform of the remote console as returned by the executable."
                                },
                                "customPlatform": {
                                    "type": "string",
                                    "description": "Platform, as defined in the project platforms of the remote console as returned by the executable."
                                },
                                "host": {
                                    "type": "string",
                                    "description": "The IPv4 of the connected host. This can also be a file path if Wwise is connected to a local file (profiler session)."
                                },
                                "appName": {
                                    "type": "string",
                                    "description": "The name of the connected application as returned by the executable."
                                }
                            },
                            "required": [ "name", "platform", "customPlatform", "host", "appName" ],
                            "description": "Describe the remote process."
                        }
                    }
                },
                "required": [ "consoles" ],
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Getting available consoles",
                    "description": "Gets the available console for the connected sound engine.",
                    "args": {
                    },
                    "result": {
                        "consoles": [
                            {
                                "name": "MyConsole01",
                                "platform": "Android",
                                "customPlatform": "CustomAndroid",
                                "host": "127.0.0.1",
                                "appName": "MyApp"
                            },
                            {
                                "name": "MyConsole02",
                                "platform": "Windows",
                                "customPlatform": "CustomBuild01",
                                "host": "127.0.0.1",
                                "appName": "MyApp"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.remote.getConnectionStatus",
			"restrict": [ "userInterface" ],
            "description": "Retrieves the connection status.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "isConnected": {
                        "type": "boolean",
                        "description": "Indicates if the Wwise Authoring application is connected to a Wwise Sound Engine process."
                    },
                    "status": {
                        "type": "string",
                        "description": "The current connection status in text."
                    },
                    "console": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the remote console as returned by the executable."
                            },
                            "platform": {
                                "type": "string",
                                "description": "Platform of the remote console as returned by the executable."
                            },
                            "customPlatform": {
                                "type": "string",
                                "description": "Platform, as defined in the project platforms of the remote console as returned by the executable."
                            },
                            "host": {
                                "type": "string",
                                "description": "The IPv4 of the connected host. This can also be a file path if Wwise is connected to a local file (profiler session)."
                            },
                            "appName": {
                                "type": "string",
                                "description": "The name of the connected application as returned by the executable."
                            }
                        },
                        "required": [ "name", "platform", "customPlatform", "host", "appName" ],
                        "description": "Describe the remote process."
                    }
                },
                "required": [ "isConnected", "status" ],
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Getting the connection status",
                    "description": "Retrieves the current connection status. In this example, Wwise is connected to the Integration Demo.",
                    "args": { },
                    "result": {
                        "isConnected": true,
                        "console": {
                            "name": "PC-USERNAME",
                            "platform": "Windows",
                            "host": "127.0.0.1",
                            "customPlatform": "Windows",
                            "appName": "Integration Demo"
                        },
                        "status": "Connected to PC-USERNAME (Windows - Local host) Integration Demo"
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.undo.beginGroup",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Begins an undo group. Make sure to call ak.wwise.core.endUndoGroup exactly once for every ak.wwise.core.beginUndoGroup call you make. Calls to ak.wwise.core.beginUndoGroup can be nested.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Beginning an undo group",
                    "description": "Begins an undo group.",
                    "args": { },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.undo.cancelGroup",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Cancels the last undo group. Please note that this does not revert the operations made since the last ak.wwise.core.beginUndoGroup call.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Canceling an undo group",
                    "description": "Cancels an undo group.",
                    "args": { },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.undo.endGroup",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Ends the last undo group.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "The name that will be displayed in the history for this undo group."
                    }
                },
                "required": [ "displayName" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Ending an undo group",
                    "description": "Ends an undo group.",
                    "args": {
                        "displayName": "My Undo Group"
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.plugin.getList",
            "alias": "ak.wwise.core.object.getTypes"
        },
        {
            "id": "ak.wwise.core.object.getTypes",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Retrieves the list of all object types.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "return": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "classId": {
                                    "$ref": "#/definitions/uint32",
                                    "description": "The ID (class ID) of the object."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The name of the object."
                                },
                                "type": {
                                    "type": "string",
                                    "description": "The type of the object. Refer to \\ref wobjects_index for more information on the types available."
                                }
                            },
                            "additionalProperties": false
                        }
                    }
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Getting the list of all object types.",
                    "description": "Retrieves the list of all object types.",
                    "args": { },
                    "result": {
                        "return": [
                            {
                                "classId": 16,
                                "name": "AudioSource",
                                "type": "WObject"
                            },
                            {
                                "classId": 65537,
                                "name": "PCM",
                                "type": "Conversion"
                            },
                            {
                                "classId": 8192003,
                                "name": "Wwise Flanger",
                                "type": "Effect"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.plugin.getProperty",
            "alias": "ak.wwise.core.object.getPropertyInfo"
        },
        {
            "id": "ak.wwise.core.object.getPropertyInfo",
            "restrict": [ "userInterface", "commandLine" ],
            "description": "Retrieves information about an object property.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object to watch."
                    },
                    "classId": {
                        "$ref": "#/definitions/uint32",
                        "description": "The ID (class ID) of the object to retrieve the property from."
                    },
                    "property": {
                        "type": "string",
                        "description": "The name of the property to retrieve. For more information, refer to the property list of Wwise Objects listed in \\ref wobjects_index.",
                        "$ref":"#/definitions/propertyName"
                    }
                },
                "oneOf": [
                    { "required": [ "object", "property" ] },
                    { "required": [ "classId", "property" ] }
                ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the property."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the property. For more information, refer to the property list of Wwise Objects listed in \\ref wobjects_index."
                    },
                    "audioEngineId": {
                        "$ref": "#/definitions/uint32",
                        "description": "The ID (audio engine ID) of the property."
                    },
                    "default": {
                        "$ref": "#/definitions/propertyValue",
                        "description": "The default value of the property."
                    },
                    "supports": {
                        "type": "object",
                        "description": "Features supported by the property.",
                        "properties": {
                            "rtpc": {
                                "type": "string",
                                "enum": [ "None", "Additive", "Exclusive", "Multiplicative" ],
                                "description": "The RTPC mode that is supported by the property."
                            },
                            "randomizer": {
                                "type": "boolean",
                                "description": "Indicates if the randomizer is supported by the property."
                            },
                            "unlink": {
                                "type": "boolean",
                                "description": "Indicates if unlink is supported by the property."
                            }
                        },
                        "additionalProperties": false
                    },
                    "display": {
                        "type": "object",
                        "description": "Display information related to the property.",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The display name of the property."
                            },
                            "group": {
                                "type": "string",
                                "description": "The display group of the property."
                            },
                            "index": {
                                "type": "integer",
                                "description": "The display index of the property."
                            }
                        },
                        "additionalProperties": false
                    },
                    "dependencies": {
                        "type": "array",
                        "description": "List of dependencies on other properties with their related action and conditions.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type":{
                                    "type":"string",
                                    "enum":["override", "property", "reference"],
                                    "description":"Defines the type of dependency."
                                },
                                "property": {
                                    "type": "string",
                                    "description": "The name of the property on which the dependency is. For more information, refer to the property list of Wwise Objects listed in \\ref wobjects_index.",
                                    "$ref":"#/definitions/propertyName"
                                },
                                "action": {
                                    "type": "string",
                                    "description": "The name of the action that is performed when the conditions are met."
                                },
                                "conditions": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": { 
                                            "referenceIsSet":{
                                                "type": "boolean",
                                                "description":"Used for reference dependencies, defines if the target reference must be set or not."
                                    },
                                            "restriction":{
                                                "$ref": "#/properties/restriction",
                                                "description":"Used for property dependencies, defines the restriction on which the property must be set."
                                            }
                                        },
                                        "oneOf": [
                                            { "required": [ "referenceIsSet" ] },
                                            { "required": [ "restriction" ] }
                                        ],                                         
                                        "additionalProperties": false
                                    },
                                    "description": "The conditions related to the dependency."
                                }
                            },
                            "required":["type", "property","action"],
                            "additionalProperties": false
                        }
                    },
                    "restriction": {
                        "description": "Restriction on the value of the property.",
                        "oneOf": [
                            {
                                "type":"object",
                                "description": "Empty object indicating that the property has no restriction.",
                                "additionalProperties": false
                            },
                            {
                                "type":"object",
                                "description": "Restriction on the range of values the property supports.",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [ "range" ],
                                        "description": "The value restriction of the property."
                                    },
                                    "min":{
                                        "type": "number",
                                        "description": "The minimum value for the property."
                                    },
                                    "max":{
                                        "type": "number",
                                        "description": "The maximum value for the property."
                                    }
                                },
                                "additionalProperties": false,
                                "required":["type", "min", "max"]
                            },
                            {
                                "type":"object",
                                "description": "Restrictions on the reference object.",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [ "reference" ],
                                        "description": "The object reference restrictions of the property."
                                    },
                                    "restrictions":{
                                        "type":"array",
                                        "description": "List of object reference restrictions.",
                                        "items": {
                                            "oneOf": [
                                                {
                                                    "type": "object",
                                                    "description": "Restriction on the object type that can be referenced.",
                                                    "properties": {
                                                        "type": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "description": "Possible object type supported. See \\ref wobjects_index for the list of objects."
                                                            }
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required":["type"]
                                                },
                                                {
                                                    "type": "object",
                                                    "description": "Restriction on the object category from which objects can be referenced.",
                                                    "properties": {
                                                        "category": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "description": "Possible category supported."
                                                            }
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required":["category"]
                                                },
                                                {
                                                    "type": "object",
                                                    "description": "Restriction on the hierarchy position relative to a parent objects must occupy.",
                                                    "properties": {
                                                        "childOfReference": {
                                                            "type": "string",
                                                            "description": "Name of the reference."
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required":["childOfReference"]
                                                },
                                                {
                                                    "type": "string",
                                                    "description": "Flag restrictions that, when present, are considered true. <b>notNull</b> indicates that the referenced object must exist; it cannot be null. <b>playable</b> indicates that the referenced object must be playable.",
                                                    "enum": ["notNull", "playable"]
                                                }
                                            ]
                                        }
                                    }
                                },
                                "additionalProperties": false,
                                "required":["type", "restrictions"]
                            },
                            {
                                "type":"object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [ "enum" ],
                                        "description": "The value restriction of the property."
                                    },
                                    "values":{
                                        "type":"array",
                                        "description": "List of the possible enumerated values the property is restricted to.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "value":{
                                                    "oneOf":[
                                                            { "type":"number" },
                                                            { "type":"boolean" }
                                                        ]
                                                    ,
                                                    "description":"One of the enumerated values."
                                                },
                                                "displayName":{
                                                    "type":"string",
                                                    "description":"The name associated with the value."
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                },
                                "additionalProperties": false,
                                "required":["type", "values"]
                            }
                        ]
                    },
                    "ui": {
                        "type": "object",
                        "description": "Information related to how the property is displayed.",
                        "properties": {
                            "value": {
                                "type": "object",
                                "properties": {
                                    "decimals": {
                                        "type": "integer",
                                        "description": "The number of decimals displayed for the value."
                                    },
                                    "step": {
                                        "type": "number",
                                        "description": "The amount by which the display increments the value."
                                    },
                                    "fine": {
                                        "type": "number",
                                        "description": "The amount by which the display increments the value for fine adjustment."
                                    },
                                    "min": {
                                        "type": "number",
                                        "description": "The minimum display value."
                                    },
                                    "max": {
                                        "type": "number",
                                        "description": "The maximum display value."
                                    },
                                    "infinity": {
                                        "type": "number",
                                        "description": "The number used to represent infinity."
                                    }
                                },
                                "additionalProperties": false
                            },
                            "displayAs": {
                                "type": "object",
                                "properties": {
                                    "lrMix": {
                                        "type": "boolean",
                                        "description": "Indicates if the property should be displayed as a left-right mix."
                                    },
                                    "musicNote": {
                                        "type": "boolean",
                                        "description": "Indicates if the property should be displayed as a music note (MIDI)."
                                    },
                                    "bitfield": {
                                        "type": "boolean",
                                        "description": "Indicates if the property should be displayed as a bitfield."
                                    }
                                },
                                "additionalProperties": false
                            },
                            "dataMeaning": {
                                "type": "string",
                                "enum": [ "None", "Frequency", "Decibels", "PitchCents" ],
                                "description": "The unit type of the property."
                            },
                            "autoUpdate": {
                                "type": "boolean",
                                "description": "Indicates if the value of the property is updated while moving the slider."
                            }
                        },
                        "additionalProperties": false
                    }
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Retrieving information about an object property.",
                    "description": "Retrieves information about an object property.",
                    "args": {
                        "classId": 65552,
                        "property": "Volume"
                    },
                    "result": {
                        "name": "Volume",
                        "type": "Real64",
                        "default": 0,
                        "audioEngineId": 0,
                        "supports": {
                            "rtpc": "Additive",
                            "randomizer": true,
                            "unlink": true
                        },
                        "display": {
                            "name": "Voice Volume",
                            "index": 1816,
                            "group": "Audio/General Settings"
                        },
                        "dependencies": [],
                        "restriction": {
                            "type": "range",
                            "max": 200,
                            "min": -200
                        },
                        "ui": {
                            "value": {
                                "max": 12,
                                "min": -96,
                                "decimals": 1,
                                "step": 1,
                                "fine": 0.1,
                                "infinity": 0
                            },
                            "displayAs": {
                                "lrMix": false,
                                "musicNote": false,
                                "bitfield": false
                            },
                            "dataMeaning": "Decibels",
                            "autoUpdate": false
                        }
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.plugin.getProperties",
            "alias": "ak.wwise.core.object.getPropertyNames"
        },
        {
            "id": "ak.wwise.core.object.getPropertyNames",
            "restrict": [ "userInterface", "commandLine" ],
            "description": "Retrieves the list of property names for an object.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object to watch."
                    },
                    "classId": {
                        "$ref": "#/definitions/uint32",
                        "description": "The ID (class ID) of the object to retrieve the properties from."
                    }
                },
                "oneOf": [
                    { "required": [ "object" ] },
                    { "required": [ "classId" ] }
                ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "return": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "The name of the property."
                        }
                    }
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Retrieving the list of properties of an object.",
                    "description": "Retrieves the list of properties of an object.",
                    "args": {
                        "classId": 8192003
                    },
                    "result": {
                        "return": [
                            "DelayTime",
                            "DryLevel",
                            "FeedForwardLevel",
                            "FeedBackLevel",
                            "EnableLFO",
                            "ModDepth",
                            "ModFrequency",
                            "ModWaveform",
                            "ModSmoothing",
                            "ModPWM",
                            "ModPhaseOffset",
                            "ModPhaseMode",
                            "ModPhaseSpread",
                            "WetDryMix",
                            "OutputLevel",
                            "ProcessCenter",
                            "ProcessLFE"
                        ]
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.object.isPropertyEnabled",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Retrieves the status of a property.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object to check."
                    },
                    "platform": {
                        "$ref": "#/definitions/platformArg",
                        "description": "The ID (GUID) or path of the platform to link the reference.  Set to null-guid for unlinked reference."
                    },
                    "property": {
                        "type": "string",
                        "description": "The name of the property. For more information, refer to the property list of Wwise Objects listed in \\ref wobjects_index.",
                        "$ref":"#/definitions/propertyName"
                    }
                },
                "required": [ "object", "platform", "property" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "return": {
                        "type": "boolean",
                        "description": "Indicates if the property is enabled."
                    }
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Checking if a property is enabled.",
                    "description": "Checks if a property is enabled.",
                    "args": {
                        "object": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "platform": "{66666666-7777-8888-9999-AAAAAAAAAAAA}",
                        "property": "Volume"
                    },
                    "result": {
                        "return": true
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.debug.enableAsserts",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Enables debug assertions. Every call to enableAsserts with false increments the ref count. Calling with true will decrement the ref count. This is only available with Debug builds.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "enable": {
                        "type": "boolean",
                        "description": "Indicate if assertions should be enabled or disabled."
                    }
                },
                "required": [ "enable" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.debug.testAssert",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Private use only.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "required": [ ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.soundbank.getInclusions",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Retrieves a SoundBank's inclusion list.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "soundbank": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the SoundBank to add an inclusion to."
                    }

                },
                "required": [ "soundbank" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "inclusions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "object": {
                                    "$ref": "#/definitions/guid",
                                    "description": "The ID (GUID) of the object to add to / remove from the SoundBank's inclusion list."
                                },
                                "filter": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [ "events", "structures", "media" ],
                                        "maxItems": 3
                                    }
                                }
                            },
                            "required": [ "object", "filter" ],
                            "additionalProperties": false
                        }
                    }
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Retrieving a SoundBank's inclusion list",
                    "description": "Gets a SoundBank's inclusion list.",
                    "args": {
                        "soundbank": "{A076AA65-B71A-45BB-8841-5A20C52CE727}"
                    },
                    "result": {
                        "inclusions": [
                            {
                                "object": "{1111AAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE}",
                                "filter": [ "events" ]
                            },
                            {
                                "object": "{2222AAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE}",
                                "filter": [ "structures", "media" ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.soundbank.setInclusions",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Modifies a SoundBank's inclusion list.  The 'operation' argument determines how the 'inclusions' argument modifies the SoundBank's inclusion list; 'inclusions' may be added to / removed from / replace the SoundBank's inclusion list.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "soundbank": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the SoundBank to add an inclusion to."
                    },
                    "operation": {
                        "type": "string",
                        "enum": [ "add", "remove", "replace" ],
                        "description": "Determines how the 'inclusions' argument is used to modify the SoundBank's inclusion list; 'inclusions' may be used to add to / remove from / replace the SoundBank's inclusion list."
                    },
                    "inclusions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "object": {
                                    "$ref": "#/definitions/objectArg",
                                    "description": "The ID (GUID) or path of the object to add to / remove from the SoundBank's inclusion list."
                                },
                                "filter": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [ "events", "structures", "media" ],
                                        "maxItems": 3
                                    }
                                }
                            },
                            "required": [ "object", "filter" ],
                            "additionalProperties": false
                        }
                    }
                },
                "required": [ "soundbank", "inclusions", "operation" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Adding an object to the inclusion list",
                    "description": "Adds an object to the SoundBank's inclusion list.  The 'media' filter is left out.",
                    "args": {
                        "soundbank": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "operation": "add",
                        "inclusions": [
                            {
                                "object": "{AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE}",
                                "filter": [ "events", "structures" ]
                            }
                        ]
                    },
                    "result": { }
                },
                {
                    "title": "Clearing the inclusion list",
                    "description": "The SoundBank's inclusion list is cleared via the 'replace' operation and an empty 'inclusions' list.",
                    "args": {
                        "soundbank": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                        "operation": "replace",
                        "inclusions": [ ]
                    },
                    "result": { }
                }
            ]
        },

        {
            "id": "ak.wwise.core.transport.create",
			"restrict": [ "userInterface" ],
            "description": "Creates a transport object for the given Wwise object.  The return transport object can be used to play, stop, pause and resume the Wwise object via the other transport functions.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object to control via the transport object."
                    },
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "The game object to use for playback."
                    }
                },
                "required": [ "object" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "transport": {
                        "$ref": "#/definitions/uint32",
                        "description": "Transport object ID to be used with all other ak.wwise.core.transport functions."
                    }
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Creating a transport object.",
                    "description": "Creates a transport object for a given Wwise object.",
                    "args": {
                        "object": "{A076AA65-B71A-45BB-8841-5A20C52CE727}"
                    },
                    "result": {
                        "transport": 1234
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.transport.destroy",
			"restrict": [ "userInterface" ],
            "description": "Destroys the given transport object.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "transport": {
                        "$ref": "#/definitions/uint32",
                        "description": "Transport object ID to be used with all other ak.wwise.core.transport functions."
                    }
                },
                "required": [ "transport" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Destroying a transport object.",
                    "description": "Destroys the given transport object.",
                    "args": {
                        "transport": 1234
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.transport.getState",
			"restrict": [ "userInterface" ],
            "description": "Gets the state of the given transport object.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "transport": {
                        "$ref": "#/definitions/uint32",
                        "description": "Transport object ID to be used with all other ak.wwise.core.transport functions."
                    }
                },
                "required": [ "transport" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string",
                        "description": "The state of the transport object.",
                        "enum": [ "playing", "stopped", "paused" ]
                    }
                },
                "required": [ "state" ],
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Get a transport object's state.",
                    "description": "Gets the state of the given transport object.",
                    "args": {
                        "transport": 1234
                    },
                    "result": {
                        "state": "playing"
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.transport.getList",
			"restrict": [ "userInterface" ],
            "description": "Returns the list of transport objects.",
            "argsSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "list": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "object": {
                                    "$ref": "#/definitions/guid",
                                    "description": "The ID (GUID) of the object controlled by the transport object."
                                },
                                "gameObject": {
                                    "$ref": "#/definitions/gameObject",
                                    "description": "The game object used by the transport object."
                                },
                                "transport": {
                                    "$ref": "#/definitions/uint32",
                                    "description": "Transport object ID."
                                }
                            }
                        }
                    }
                }
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Retrieving the list of transport objects.",
                    "description": "Retrieves the list of transport objects.",
                    "args": { },
                    "result": {
                        "list": [
                            {
                                "object": "{A076AA65-B71A-45BB-8841-5A20C52CE727}",
                                "gameObject": 1234,
                                "transport": 5
                            },
                            {
                                "object": "{AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE}",
                                "gameObject": 6789,
                                "transport": 12
                            }
                        ]
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.transport.executeAction",
			"restrict": [ "userInterface" ],
            "description": "Executes an action on the given transport object, or all transports if no transport is specified.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "transport": {
                        "$ref": "#/definitions/uint32",
                        "description": "Transport object ID to be used with all other ak.wwise.core.transport functions."
                    },
                    "action": {
                        "type": "string",
                        "enum": [ "play", "stop", "pause", "playStop" ],
                        "description": "The action to execute."
                    }
                },
                "required": [ "action" ],
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": { },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Play a transport object.",
                    "description": "Plays the given transport object.",
                    "args": {
                        "action": "play",
                        "transport": 1234
                    },
                    "result": { }
                },
                {
                    "title": "Stop all transport objects.",
                    "description": "Stops all transport objects.",
                    "args": {
                        "action": "stop"
                    },
                    "result": { }
                },
                {
                    "title": "Toggle playback (pause / resume) on a transport object.",
                    "description": "Toggles playback (pause / resume) on the given transport object.",
                    "args": {
                        "action": "pause",
                        "transport": 1234
                    },
                    "result": { }
                },
                {
                    "title": "Toggle playback (play / stop) on a transport object.",
                    "description": "Toggles playback (play / stop) on the given transport object.",
                    "args": {
                        "action": "playStop",
                        "transport": 1234
                    },
                    "result": { }
                }
            ]
        },
        {
            "id": "ak.wwise.core.audioSourcePeaks.getMinMaxPeaksInRegion",
            "restrict": [ "userInterface", "commandLine" ],
            "description": "Get the min/max peak pairs, in a given region of an audio source, as a collection of binary strings (one per channel). If getCrossChannelPeaks is true, there will be only one binary string representing peaks across all channels globally.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object."
                    },
                    "timeFrom": {
                        "type": "number",
                        "description": "The start time, in seconds, of the section of the audio source for which peaks are required"
                    },
                    "timeTo": {
                        "type": "number",
                        "description": "The end time, in seconds, of the section of the audio source for which peaks are required"
                    },
                    "numPeaks": {
                        "type": "number",
                        "description": "The number of peaks that are required"
                    },
                    "getCrossChannelPeaks": {
                        "type": "boolean",
                        "description": "When true, peaks will be calculated globally across channels, instead of per channel."
                    }
                },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "peaksBinaryStrings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description":  "An array of binary strings. Each binary string represents one channel of min max peaks data. When getCrossChannelPeaks is true there will only be one binary string in this array, representing the min max peaks across all channels."
                    },
                    "numChannels": {
                        "type": "number",
                        "description": "The number of channels of peak data (i.e. the number of strings in peaksBinaryStrings). This will be 1 if getCrossChannelPeaks is true."
                    },
                    "maxAbsValue": {
                        "type": "number",
                        "description": "The maximum value that a peak can take. This can be used to normalize the peaks in the array (between -1, 1), by dividing each by this number."
                    },
                    "peaksArrayLength": {
                        "type": "number",
                        "description": "The number of peaks in the returned min max channel arrays. If peaksArrayLength is less than the numPeaks input argument, this indicates fewer samples were available than numPeaks requested. In this case, the arrays contain all of the sample values within the requested time window."
                    },
                    "peaksDataSize": {
                        "type": "number",
                        "description": "The size of the data in the peaks min max arrays. This can be used (in conjuction with peaksArrayLength) to decode the peaksBinaryStrings to 16 bit integer arrays"
                    }
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Get peaks per channel",
                    "description": "Get peaks for an audio source object.",
                    "args": {
                        "object": "{AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE}",
                        "timeFrom": 0.0,
                        "timeTo": 2.0,
                        "numPeaks": 750, 
                        "getCrossChannelPeaks": false
                    },
                    "result": {
                        "peaksBinaryStrings": [ "longbase64string", "longbase64string" ],
                        "numChannels": 2,
                        "maxAbsValue": 32767,
                        "peaksArrayLength": 750,
                        "peaksDataSize": 1000
                    }
                },
                {
                    "title": "Get peaks across channels",
                    "description": "Get peaks for an audio source object.",
                    "args": {
                        "object": "{AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE}",
                        "timeFrom": 0.0,
                        "timeTo": 2.0,
                        "numPeaks": 750,
                        "getCrossChannelPeaks": true
                    },
                    "result": {
                        "peaksBinaryStrings": [ "longbase64string" ],
                        "numChannels": 2,
                        "maxAbsValue": 32767,
                        "peaksArrayLength": 750,
                        "peaksDataSize": 1000
                    }
                }
            ]
        },
        {
            "id": "ak.wwise.core.audioSourcePeaks.getMinMaxPeaksInTrimmedRegion",
            "restrict": [ "userInterface", "commandLine" ],
            "description": "Get the min/max peak pairs in the entire trimmed region of an audio source, for each channel, as an array of binary strings (one per channel). If getCrossChannelPeaks is true, there will be only one binary string representing peaks across all channels globally.",
            "argsSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                        "description": "The ID (GUID) or path of the object."
                    },
                    "numPeaks": {
                        "type": "number",
                        "description": "The number of peaks that are required"
                    },
                    "getCrossChannelPeaks": {
                        "type": "boolean",
                        "description": "When true, peaks will be calculated globally across channels, instead of per channel."
                    }
                },
                "additionalProperties": false
            },
            "resultSchema": {
                "type": "object",
                "properties": {
                    "peaksBinaryStrings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of binary strings. Each binary string represents one channel of min max peaks data. When getCrossChannelPeaks is true there will only be one binary string in this array, representing the min max peaks across all channels."
                    },
                    "numChannels": {
                        "type": "number",
                        "description": "The number of channels of peak data (i.e. the number of strings in peaksBinaryStrings). This will be 1 if getCrossChannelPeaks is true."
                    },
                    "maxAbsValue": {
                        "type": "number",
                        "description": "The maximum value that a peak can take. This can be used to normalize the peaks in the array (between -1, 1), by dividing each by this number."
                    },
                    "peaksArrayLength": {
                        "type": "number",
                        "description": "The number of peaks in the returned min max channel arrays. If peaksArrayLength is less than the numPeaks input argument, this indicates fewer samples were available than numPeaks requested. In this case, the arrays contain all of the sample values within the requested time window."
                    },
                    "peaksDataSize": {
                        "type": "number",
                        "description": "The size of the data in the peaks min max arrays. This can be used (in conjuction with peaksArrayLength) to decode the peaksBinaryStrings to 16 bit integer arrays"
                    }
                },
                "additionalProperties": false
            },
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "examples": [
                {
                    "title": "Get peaks per channel",
                    "description": "Get peaks for an audio source object (within the trimmed region).",
                    "args": {
                        "object": "{AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE}",
                        "numPeaks": 750,
                        "getCrossChannelPeaks": false
                    },
                    "result": {
                        "peaksBinaryStrings": [ "longbase64string", "longbase64string" ],
                        "numChannels": 2,
                        "maxAbsValue": 32767,
                        "peaksArrayLength": 750,
                        "peaksDataSize": 1000
                    }
                },
                {
                    "title": "Get peaks across channels",
                    "description": "Get peaks for an audio source object (within the trimmed region).",
                    "args": {
                        "object": "{AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE}",
                        "numPeaks": 750,
                        "getCrossChannelPeaks": true
                    },
                    "result": {
                        "peaksBinaryStrings": [ "longbase64string" ],
                        "numChannels": 1,
                        "maxAbsValue": 32767,
                        "peaksArrayLength": 750,
                        "peaksDataSize": 1000
                    }
                }
            ]
        }
    ],

    "topics": [
        {
            "id": "ak.wwise.core.object.referenceChanged",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when an object reference is changed.",
            "optionsSchema": {
                "type": "object",
                "required": [],
                "properties": {
		            "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for the object, the old reference and the new reference."
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform."
                    }
                },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The object for which a reference was changed."
                    },
                    "old": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The previous referenced object."
                    },
                    "new": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The new referenced object."
                    },
                    "reference": {
                        "type": "string",
                        "description": "The name of the reference that was changed. See the object's description in wobjects.xml for an object's possible references."
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform if the reference was changed for a single platform. When not provided, the reference was changed for all platforms."
                    }
                },
                "required": [ "object", "old", "new", "reference" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.switchContainer.assignmentAdded",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when an assignment is added to a Switch Container.",
            "optionsSchema": {
                "type": "object",
                "required": [],
                "properties": {
		            "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for the Switch Container and the assignment (pair of objects)."
                    }
                },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "switchContainer": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The Switch Container on which the assignment was added."
                    },
                    "child": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The child object that was assigned."
                    },
                    "stateOrSwitch": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The State or Switch to which the child object was assigned."
                    }
                },
                "required": [ "switchContainer", "child", "stateOrSwitch" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.switchContainer.assignmentRemoved",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when an assignment is removed from a Switch Container.",
            "optionsSchema": {
                "type": "object",
                "required": [],
                "properties": {
		            "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for the Switch Container and the assignment (pair of objects)."
                    }
                },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "switchContainer": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The Switch Container on which the assignment was removed."
                    },
                    "child": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The child object that was assigned."
                    },
                    "stateOrSwitch": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The State or Switch to which the child object was assigned."
                    }
                },
                "required": [ "switchContainer", "child", "stateOrSwitch" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.object.nameChanged",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when an object is renamed.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": {
		                "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for every name change."
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform."
                    }
                },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The object that was renamed."
                    },
                    "newName": {
                        "type": "string",
                        "description": "The new name of the object."

                    },
                    "oldName": {
                        "type": "string",
                        "description": "The previous name of the object."
                    }
                },
                "required": [ "object", "newName", "oldName" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.object.notesChanged",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when the object's notes are changed.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": {
		                "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for every object's note change."
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform."
                    }
                },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The object that had its notes changed."
                    },
                    "newNotes": {
                        "type": "string",
                        "description": "The new notes of the object."

                    },
                    "oldNotes": {
                        "type": "string",
                        "description": "The previous notes of the object."
                    }
                },
                "required": [ "object", "newNotes", "oldNotes" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.object.created",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when an object is created.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": {
		                "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for every object being created."
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform."
                    }
                },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The object newly created."
                    }
                },
                "required": [ "object" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.object.preDeleted",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent prior to an object's deletion.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": {
		                "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for every object prior to its deletion."
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform."
                    }
                },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The object to be deleted."
                    }
                },
                "required": [ "object" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.object.postDeleted",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent following an object's deletion.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": {
		                "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for every object following its deletion."
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform."
                    }
                },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The object deleted."
                    }
                },
                "required": [ "object" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.object.childAdded",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when an object is added as a child to another object.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": {
		                "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for every child being added."
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform."
                    }
                },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "child": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The child object added."
                    },
                    "parent": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The parent object where the object is added."
                    }
                },
                "required": [ "child", "parent" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.object.childRemoved",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when an object is removed from the children of another object.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": {
		                "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for every child being removed."
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform."
                    }
                },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "child": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The child object removed."
                    },
                    "parent": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The parent object where the object is removed."
                    }
                },
                "required": [ "child", "parent" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.object.curveChanged",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when one or many curves are changed.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": {
		                "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for every curve change."
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform."
                    }
                },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "notification": {
                        "type": "string",
                        "description": "Type of change applied to the curve."
                    },
                    "curve": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The curve object changed."

                    },
                    "owner": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The owner object."

                    }
                },
                "required": [ "notification", "curve", "owner" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.object.attenuationCurveChanged",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when an attenuation curve is changed.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": {
		                "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for every attenuation curve change."
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform."
                    }
                },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "attenuation": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The attenuation object owning the curve."

                    },
                    "curveType": {
                        "type": "string",
                        "enum": [ "VolumeDryUsage", "VolumeWetGameUsage", "VolumeWetUserUsage", "LowPassFilterUsage", "HighPassFilterUsage", "SpreadUsage", "FocusUsage" ],
                        "description": "The curve type that changed."
                    }
                },
                "required": [ "attenuation", "curveType" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.object.attenuationCurveLinkChanged",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when an attenuation curve's link/unlink is changed.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": {
		                "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for every attenuation curve link change."
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform."
                    }
                },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "attenuation": {
                        "$ref": "#/definitions/objectReturn",
                        "description": "The attenuation object owning the curve."
                    },
                    "curveType": {
                        "type": "string",
                        "enum": [ "VolumeDryUsage", "VolumeWetGameUsage", "VolumeWetUserUsage", "LowPassFilterUsage", "HighPassFilterUsage", "SpreadUsage", "FocusUsage" ],
                        "description": "The curve type that changed."
                    }
                },
                "required": [ "attenuation", "curveType" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.core.object.propertyChanged",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when the watched property of an object changes.",
            "optionsSchema": {
                "type": "object",
            	"properties": {
                    "object": {
                        "$ref": "#/definitions/objectArg",
                    	"description": "The ID (GUID) or path of the object to watch."
                    },
                    "property": {
                        "type": "string",
                        "$ref":"#/definitions/propertyName",
                        "description": "The property of the watched object to watch."
                    },
                    "return": {
                        "$ref": "#/definitions/returnExpression",
                        "description": "Data to be returned for every change on \"property\" of \"object\". Refer to \\ref wobjects_index for more information on the properties available."
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform."
                    }
                },
                "required": [ "object", "property" ],
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "object": {
                    	"$ref": "#/definitions/guid",
                    	"description": "The ID (GUID) of the watched object."
                    },
					"property": {
						"type": "string",
                        "$ref":"#/definitions/propertyName",
                        "description": "The watched property of the watched object."
					},
					"old": {
						"oneOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" }
                        ]
					},
					"new": {
						"oneOf": [
                            { "type": "string" },
                            { "type": "number" },
                            { "type": "boolean" }
                        ]
                    },
                    "platform": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the platform for which the change occured."
					}
                },
                "required": [ "id", "property", "old", "new" ],
                "additionalProperties": false
            }
        },
		{
            "id": "ak.wwise.ui.selectionChanged",
			"restrict": [ "userInterface" ],
            "description": "Sent when the selection changes in the project.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            }
        },
		{
            "id": "ak.wwise.core.project.loaded",
			"restrict": [ "userInterface" ],
            "description": "Sent when the project has been loaded.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            }
        },
		{
            "id": "ak.wwise.core.project.preClosed",
			"restrict": [ "userInterface" ],
            "description": "Sent when the project begins closing.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            }
        },
		{
            "id": "ak.wwise.core.project.postClosed",
			"restrict": [ "userInterface" ],
            "description":"Sent when the after the project is completely closed.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            }
        },
		{
            "id": "ak.wwise.core.transport.stateChanged",
            "restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when the transport's state has changed.",
            "optionsSchema": {
                "type": "object",
                "properties": {
                    "transport": {
                        "$ref": "#/definitions/uint32",
                        "description": "The ID of the watched transport."
                    }
                },
                "required": [ "transport" ],
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
                    "transport": {
                        "$ref": "#/definitions/uint32",
                        "description": "The ID of the watched transport."
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the transport object.",
                        "enum": [ "playing", "stopped", "paused" ]
                    },
                    "object": {
                        "$ref": "#/definitions/guid",
                        "description": "The ID (GUID) of the object controlled by the transport object."
                    },
                    "gameObject": {
                        "$ref": "#/definitions/gameObject",
                        "description": "The game object used by the transport object."
                    }
                },
                "required": [ "transport", "state", "object" ],
                "additionalProperties": false
            }
        },
        {
            "id": "ak.wwise.debug.assertFailed",
			"restrict": [ "userInterface", "commandLine" ],
            "description": "Sent when an assert has failed.",
            "optionsSchema": {
                "type": "object",
                "required": [ ],
                "properties": { },
                "additionalProperties": false
            },
            "publishSchema": {
                "type": "object",
                "properties": {
					"expression": {
						"type": "string",
                        "description": "The expression that failed."
					},
					"fileName": {
						"type": "string",
                        "description": "The name of the source file."
					},
					"lineNumber": {
						"type": "number",
                        "description": "The line number."
					}
                },
                "required": [ "expression", "fileName", "lineNumber" ],
                "additionalProperties": false
            }
        }
    ]
}
